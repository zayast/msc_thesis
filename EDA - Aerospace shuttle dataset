{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyN31MdNhpo4bS/4acE2pYA2"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":7,"metadata":{"id":"u82pkANv6KzH","executionInfo":{"status":"ok","timestamp":1759182493891,"user_tz":-480,"elapsed":40,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}}},"outputs":[],"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EBT1DPPD7aq-","executionInfo":{"status":"ok","timestamp":1759182498574,"user_tz":-480,"elapsed":2438,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"69d3ff9d-b995-451e-e619-30cae6d797ed"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["training_path = '/content/drive/MyDrive/shuttle_training.csv'\n","\n","training_df = pd.read_csv(training_path)\n","\n","test_path = '/content/drive/MyDrive/shuttle_test.csv'\n","\n","test_df = pd.read_csv(test_path)\n","\n","# Combine train + test\n","df = pd.concat([training_df, test_df], ignore_index=True)"],"metadata":{"id":"Rvw2l1y67e5q","executionInfo":{"status":"ok","timestamp":1759182901008,"user_tz":-480,"elapsed":67,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"_yQWSQAF8oZc","executionInfo":{"status":"ok","timestamp":1759182503941,"user_tz":-480,"elapsed":91,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"f64fe1a5-1133-4b8e-8fa7-873b63de33da"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   feature1  feature2  feature3  feature4  feature5  feature6  feature7  \\\n","0        50        21        77         0        28         0        27   \n","1        55         0        92         0         0        26        36   \n","2        53         0        82         0        52        -5        29   \n","3        37         0        76         0        28        18        40   \n","4        37         0        79         0        34       -26        43   \n","\n","   feature8  feature9  label  anomaly  \n","0        48        22      2        1  \n","1        92        56      4        1  \n","2        30         2      1        0  \n","3        48         8      1        0  \n","4        46         2      1        0  "],"text/html":["\n","  <div id=\"df-a90c944e-9024-4cba-b624-038c641aba13\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>feature1</th>\n","      <th>feature2</th>\n","      <th>feature3</th>\n","      <th>feature4</th>\n","      <th>feature5</th>\n","      <th>feature6</th>\n","      <th>feature7</th>\n","      <th>feature8</th>\n","      <th>feature9</th>\n","      <th>label</th>\n","      <th>anomaly</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>50</td>\n","      <td>21</td>\n","      <td>77</td>\n","      <td>0</td>\n","      <td>28</td>\n","      <td>0</td>\n","      <td>27</td>\n","      <td>48</td>\n","      <td>22</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>55</td>\n","      <td>0</td>\n","      <td>92</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>26</td>\n","      <td>36</td>\n","      <td>92</td>\n","      <td>56</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>53</td>\n","      <td>0</td>\n","      <td>82</td>\n","      <td>0</td>\n","      <td>52</td>\n","      <td>-5</td>\n","      <td>29</td>\n","      <td>30</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>37</td>\n","      <td>0</td>\n","      <td>76</td>\n","      <td>0</td>\n","      <td>28</td>\n","      <td>18</td>\n","      <td>40</td>\n","      <td>48</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>37</td>\n","      <td>0</td>\n","      <td>79</td>\n","      <td>0</td>\n","      <td>34</td>\n","      <td>-26</td>\n","      <td>43</td>\n","      <td>46</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a90c944e-9024-4cba-b624-038c641aba13')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a90c944e-9024-4cba-b624-038c641aba13 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a90c944e-9024-4cba-b624-038c641aba13');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-fc25c41b-182a-4c1a-95d7-11a351edd60e\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fc25c41b-182a-4c1a-95d7-11a351edd60e')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-fc25c41b-182a-4c1a-95d7-11a351edd60e button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 43500,\n  \"fields\": [\n    {\n      \"column\": \"feature1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 27,\n        \"max\": 126,\n        \"num_unique_values\": 72,\n        \"samples\": [\n          85,\n          111,\n          76\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"feature2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 78,\n        \"min\": -4821,\n        \"max\": 5075,\n        \"num_unique_values\": 177,\n        \"samples\": [\n          -38,\n          -14,\n          -25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"feature3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 21,\n        \"max\": 149,\n        \"num_unique_values\": 49,\n        \"samples\": [\n          85,\n          73,\n          29\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"feature4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 41,\n        \"min\": -3939,\n        \"max\": 3830,\n        \"num_unique_values\": 121,\n        \"samples\": [\n          -45,\n          -17,\n          -2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"feature5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21,\n        \"min\": -188,\n        \"max\": 436,\n        \"num_unique_values\": 52,\n        \"samples\": [\n          56,\n          10,\n          64\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"feature6\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 179,\n        \"min\": -13839,\n        \"max\": 13148,\n        \"num_unique_values\": 261,\n        \"samples\": [\n          15,\n          -267,\n          91\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"feature7\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": -48,\n        \"max\": 105,\n        \"num_unique_values\": 83,\n        \"samples\": [\n          44,\n          27,\n          58\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"feature8\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21,\n        \"min\": -353,\n        \"max\": 270,\n        \"num_unique_values\": 120,\n        \"samples\": [\n          64,\n          103,\n          83\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"feature9\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25,\n        \"min\": -356,\n        \"max\": 266,\n        \"num_unique_values\": 75,\n        \"samples\": [\n          80,\n          52,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 7,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          2,\n          4,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"anomaly\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RU8J8-fh8tyh","executionInfo":{"status":"ok","timestamp":1759182905142,"user_tz":-480,"elapsed":46,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"878a236c-e1f7-4ab7-f492-84252c264967"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 58000 entries, 0 to 57999\n","Data columns (total 11 columns):\n"," #   Column    Non-Null Count  Dtype\n","---  ------    --------------  -----\n"," 0   feature1  58000 non-null  int64\n"," 1   feature2  58000 non-null  int64\n"," 2   feature3  58000 non-null  int64\n"," 3   feature4  58000 non-null  int64\n"," 4   feature5  58000 non-null  int64\n"," 5   feature6  58000 non-null  int64\n"," 6   feature7  58000 non-null  int64\n"," 7   feature8  58000 non-null  int64\n"," 8   feature9  58000 non-null  int64\n"," 9   label     58000 non-null  int64\n"," 10  anomaly   58000 non-null  int64\n","dtypes: int64(11)\n","memory usage: 4.9 MB\n"]}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"dy7YAwuX8yh1","executionInfo":{"status":"ok","timestamp":1759182911339,"user_tz":-480,"elapsed":5,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"b0e5b636-e444-46c8-c4e5-54d4b680f1fd"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           feature1      feature2      feature3      feature4      feature5  \\\n","count  58000.000000  58000.000000  58000.000000  58000.000000  58000.000000   \n","mean      48.238293     -0.019448     85.349121      0.259672     34.549862   \n","std       12.238082     77.958035      8.902769     36.521516     21.660139   \n","min       27.000000  -4821.000000     21.000000  -3939.000000   -188.000000   \n","25%       38.000000      0.000000     79.000000      0.000000     26.000000   \n","50%       45.000000      0.000000     83.000000      0.000000     42.000000   \n","75%       55.000000      0.000000     89.000000      0.000000     46.000000   \n","max      126.000000   5075.000000    149.000000   3830.000000    436.000000   \n","\n","           feature6      feature7      feature8      feature9         label  \\\n","count  58000.000000  58000.000000  58000.000000  58000.000000  58000.000000   \n","mean       1.608190     37.092310     50.884552     13.932414      1.694776   \n","std      217.597675     13.111428     21.418051     25.614018      1.350960   \n","min   -26739.000000    -48.000000   -353.000000   -356.000000      1.000000   \n","25%       -5.000000     32.000000     37.000000      0.000000      1.000000   \n","50%        0.000000     39.000000     44.000000      2.000000      1.000000   \n","75%        5.000000     42.000000     60.000000     14.000000      1.000000   \n","max    15164.000000    105.000000    270.000000    266.000000      7.000000   \n","\n","            anomaly  \n","count  58000.000000  \n","mean       0.214034  \n","std        0.410154  \n","min        0.000000  \n","25%        0.000000  \n","50%        0.000000  \n","75%        0.000000  \n","max        1.000000  "],"text/html":["\n","  <div id=\"df-1c82c3ed-d58f-41fc-a25a-9190327f380b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>feature1</th>\n","      <th>feature2</th>\n","      <th>feature3</th>\n","      <th>feature4</th>\n","      <th>feature5</th>\n","      <th>feature6</th>\n","      <th>feature7</th>\n","      <th>feature8</th>\n","      <th>feature9</th>\n","      <th>label</th>\n","      <th>anomaly</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>58000.000000</td>\n","      <td>58000.000000</td>\n","      <td>58000.000000</td>\n","      <td>58000.000000</td>\n","      <td>58000.000000</td>\n","      <td>58000.000000</td>\n","      <td>58000.000000</td>\n","      <td>58000.000000</td>\n","      <td>58000.000000</td>\n","      <td>58000.000000</td>\n","      <td>58000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>48.238293</td>\n","      <td>-0.019448</td>\n","      <td>85.349121</td>\n","      <td>0.259672</td>\n","      <td>34.549862</td>\n","      <td>1.608190</td>\n","      <td>37.092310</td>\n","      <td>50.884552</td>\n","      <td>13.932414</td>\n","      <td>1.694776</td>\n","      <td>0.214034</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>12.238082</td>\n","      <td>77.958035</td>\n","      <td>8.902769</td>\n","      <td>36.521516</td>\n","      <td>21.660139</td>\n","      <td>217.597675</td>\n","      <td>13.111428</td>\n","      <td>21.418051</td>\n","      <td>25.614018</td>\n","      <td>1.350960</td>\n","      <td>0.410154</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>27.000000</td>\n","      <td>-4821.000000</td>\n","      <td>21.000000</td>\n","      <td>-3939.000000</td>\n","      <td>-188.000000</td>\n","      <td>-26739.000000</td>\n","      <td>-48.000000</td>\n","      <td>-353.000000</td>\n","      <td>-356.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>38.000000</td>\n","      <td>0.000000</td>\n","      <td>79.000000</td>\n","      <td>0.000000</td>\n","      <td>26.000000</td>\n","      <td>-5.000000</td>\n","      <td>32.000000</td>\n","      <td>37.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>45.000000</td>\n","      <td>0.000000</td>\n","      <td>83.000000</td>\n","      <td>0.000000</td>\n","      <td>42.000000</td>\n","      <td>0.000000</td>\n","      <td>39.000000</td>\n","      <td>44.000000</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>55.000000</td>\n","      <td>0.000000</td>\n","      <td>89.000000</td>\n","      <td>0.000000</td>\n","      <td>46.000000</td>\n","      <td>5.000000</td>\n","      <td>42.000000</td>\n","      <td>60.000000</td>\n","      <td>14.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>126.000000</td>\n","      <td>5075.000000</td>\n","      <td>149.000000</td>\n","      <td>3830.000000</td>\n","      <td>436.000000</td>\n","      <td>15164.000000</td>\n","      <td>105.000000</td>\n","      <td>270.000000</td>\n","      <td>266.000000</td>\n","      <td>7.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1c82c3ed-d58f-41fc-a25a-9190327f380b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1c82c3ed-d58f-41fc-a25a-9190327f380b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1c82c3ed-d58f-41fc-a25a-9190327f380b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-3845e08e-535f-4bbc-a2e6-a157f7826cd5\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3845e08e-535f-4bbc-a2e6-a157f7826cd5')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-3845e08e-535f-4bbc-a2e6-a157f7826cd5 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"feature1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20488.372055226802,\n        \"min\": 12.238081691055564,\n        \"max\": 58000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          48.23829310344828,\n          45.0,\n          58000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"feature2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20659.40415764978,\n        \"min\": -4821.0,\n        \"max\": 58000.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          58000.0,\n          -0.019448275862068966,\n          5075.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"feature3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20480.118298943173,\n        \"min\": 8.90276876193035,\n        \"max\": 58000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          85.34912068965517,\n          83.0,\n          58000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"feature4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20614.6011905492,\n        \"min\": -3939.0,\n        \"max\": 58000.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          58000.0,\n          0.25967241379310346,\n          3830.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"feature5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20485.694490807,\n        \"min\": -188.0,\n        \"max\": 58000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          34.54986206896552,\n          42.0,\n          58000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"feature6\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24014.90065932132,\n        \"min\": -26739.0,\n        \"max\": 58000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1.6081896551724137,\n          0.0,\n          58000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"feature7\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20495.01740957376,\n        \"min\": -48.0,\n        \"max\": 58000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          37.09231034482759,\n          39.0,\n          58000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"feature8\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20500.229796241194,\n        \"min\": -353.0,\n        \"max\": 58000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          50.88455172413793,\n          44.0,\n          58000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"feature9\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20508.527740390487,\n        \"min\": -356.0,\n        \"max\": 58000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          13.932413793103448,\n          2.0,\n          58000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20505.387340411442,\n        \"min\": 1.0,\n        \"max\": 58000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.6947758620689655,\n          7.0,\n          1.3509603364606162\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"anomaly\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20506.01462339992,\n        \"min\": 0.0,\n        \"max\": 58000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.2140344827586207,\n          1.0,\n          0.4101543897215719\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X2Wzji2O86v4","executionInfo":{"status":"ok","timestamp":1759182915551,"user_tz":-480,"elapsed":4,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"f60ca65c-be48-4f54-9321-d2545edaf412"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(58000, 11)"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["anomaly_count = (df['anomaly'] == 1).sum()\n","normal_count = (df['anomaly'] == 0).sum()\n","\n","print(\"Number of anomaly:\", anomaly_count)\n","print(\"Number of normal:\", normal_count)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kPP-BBFK8_2B","executionInfo":{"status":"ok","timestamp":1759182918278,"user_tz":-480,"elapsed":10,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"ac409afa-54fb-4d44-878e-c5ec4e542021"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of anomaly: 12414\n","Number of normal: 45586\n"]}]},{"cell_type":"code","source":["plt.figure(figsize=(10, 8))\n","\n","is_fraud_count = df['anomaly'].value_counts()\n","\n","plt.pie(is_fraud_count, labels=['No', 'Yes'], autopct=\"%0.1f%%\")\n","plt.title('Is Anomaly')\n","plt.show()\n","#Imbalanced"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":675},"id":"zu1yBGXI9ahP","executionInfo":{"status":"ok","timestamp":1759182921316,"user_tz":-480,"elapsed":7,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"ddfff09e-a3c4-40ab-b758-296895723553"},"execution_count":23,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Show first 10 attacks\n","df[df['anomaly'] == 1].head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"iOwyhBdD92kp","executionInfo":{"status":"ok","timestamp":1759182923997,"user_tz":-480,"elapsed":55,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"584ef787-a627-4768-84fc-3aa9b85f887a"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    feature1  feature2  feature3  feature4  feature5  feature6  feature7  \\\n","0         50        21        77         0        28         0        27   \n","1         55         0        92         0         0        26        36   \n","5         85         0        88        -4         6         1         3   \n","6         56         0        81         0        -4        11        25   \n","8         53         8        77         0        28         0        23   \n","21       106         2       108         0        70         0         1   \n","26        55        -1        98         0        52         8        42   \n","32        79         5        83         0       -46         0         4   \n","36        56         3        97         0        46         9        41   \n","42        56         0        79         0        16         3        23   \n","\n","    feature8  feature9  label  anomaly  \n","0         48        22      2        1  \n","1         92        56      4        1  \n","5         83        80      5        1  \n","6         86        62      4        1  \n","8         48        24      4        1  \n","21        38        36      5        1  \n","26        46         4      4        1  \n","32       130       126      5        1  \n","36        51        10      4        1  \n","42        63        40      4        1  "],"text/html":["\n","  <div id=\"df-25cf36b7-d43c-4bf9-943f-d0262c832a0b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>feature1</th>\n","      <th>feature2</th>\n","      <th>feature3</th>\n","      <th>feature4</th>\n","      <th>feature5</th>\n","      <th>feature6</th>\n","      <th>feature7</th>\n","      <th>feature8</th>\n","      <th>feature9</th>\n","      <th>label</th>\n","      <th>anomaly</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>50</td>\n","      <td>21</td>\n","      <td>77</td>\n","      <td>0</td>\n","      <td>28</td>\n","      <td>0</td>\n","      <td>27</td>\n","      <td>48</td>\n","      <td>22</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>55</td>\n","      <td>0</td>\n","      <td>92</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>26</td>\n","      <td>36</td>\n","      <td>92</td>\n","      <td>56</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>85</td>\n","      <td>0</td>\n","      <td>88</td>\n","      <td>-4</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>83</td>\n","      <td>80</td>\n","      <td>5</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>56</td>\n","      <td>0</td>\n","      <td>81</td>\n","      <td>0</td>\n","      <td>-4</td>\n","      <td>11</td>\n","      <td>25</td>\n","      <td>86</td>\n","      <td>62</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>53</td>\n","      <td>8</td>\n","      <td>77</td>\n","      <td>0</td>\n","      <td>28</td>\n","      <td>0</td>\n","      <td>23</td>\n","      <td>48</td>\n","      <td>24</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>106</td>\n","      <td>2</td>\n","      <td>108</td>\n","      <td>0</td>\n","      <td>70</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>38</td>\n","      <td>36</td>\n","      <td>5</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>55</td>\n","      <td>-1</td>\n","      <td>98</td>\n","      <td>0</td>\n","      <td>52</td>\n","      <td>8</td>\n","      <td>42</td>\n","      <td>46</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>79</td>\n","      <td>5</td>\n","      <td>83</td>\n","      <td>0</td>\n","      <td>-46</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>130</td>\n","      <td>126</td>\n","      <td>5</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>56</td>\n","      <td>3</td>\n","      <td>97</td>\n","      <td>0</td>\n","      <td>46</td>\n","      <td>9</td>\n","      <td>41</td>\n","      <td>51</td>\n","      <td>10</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>56</td>\n","      <td>0</td>\n","      <td>79</td>\n","      <td>0</td>\n","      <td>16</td>\n","      <td>3</td>\n","      <td>23</td>\n","      <td>63</td>\n","      <td>40</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-25cf36b7-d43c-4bf9-943f-d0262c832a0b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-25cf36b7-d43c-4bf9-943f-d0262c832a0b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-25cf36b7-d43c-4bf9-943f-d0262c832a0b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-2ac81614-9e0b-467d-b198-9ae7c235c8e1\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2ac81614-9e0b-467d-b198-9ae7c235c8e1')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-2ac81614-9e0b-467d-b198-9ae7c235c8e1 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df[df['anomaly'] == 1]\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"feature1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18,\n        \"min\": 50,\n        \"max\": 106,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          50,\n          55,\n          106\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"feature2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6,\n        \"min\": -1,\n        \"max\": 21,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          21,\n          0,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"feature3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 77,\n        \"max\": 108,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          97,\n          92,\n          98\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"feature4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": -4,\n        \"max\": 0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -4,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"feature5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 33,\n        \"min\": -46,\n        \"max\": 70,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          46,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"feature6\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 0,\n        \"max\": 26,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0,\n          26\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"feature7\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 1,\n        \"max\": 42,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          4,\n          36\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"feature8\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28,\n        \"min\": 38,\n        \"max\": 130,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          51,\n          92\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"feature9\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 36,\n        \"min\": 4,\n        \"max\": 126,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          10,\n          56\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 2,\n        \"max\": 5,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"anomaly\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":[],"metadata":{"id":"CC-TfI_I-fA4"},"execution_count":null,"outputs":[]}]}