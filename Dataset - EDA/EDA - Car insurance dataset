{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP4RPhuTrt+O+1ho1H4H/0E"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":35,"metadata":{"id":"u82pkANv6KzH","executionInfo":{"status":"ok","timestamp":1761917616786,"user_tz":-480,"elapsed":2696,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}}},"outputs":[],"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","\n","import numpy as np\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EBT1DPPD7aq-","executionInfo":{"status":"ok","timestamp":1761914754778,"user_tz":-480,"elapsed":29932,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"b2e267cc-216f-42cd-c91c-32f3c3681fc8"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["dt_path = '/content/drive/MyDrive/datasets/carclaims.csv'\n","\n","df = pd.read_csv(dt_path)"],"metadata":{"id":"Rvw2l1y67e5q","executionInfo":{"status":"ok","timestamp":1761914864004,"user_tz":-480,"elapsed":1354,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":340},"id":"_yQWSQAF8oZc","executionInfo":{"status":"ok","timestamp":1761917038582,"user_tz":-480,"elapsed":37,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"11111166-4699-4c1b-dd8b-53a96ee2651b"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Make AccidentArea DayOfWeekClaimed MonthClaimed  WeekOfMonthClaimed  \\\n","0   Honda        Urban          Tuesday          Jan                   1   \n","1   Honda        Urban           Monday          Jan                   4   \n","2   Honda        Urban         Thursday          Nov                   2   \n","3  Toyota        Rural           Friday          Jul                   1   \n","4   Honda        Urban          Tuesday          Feb                   2   \n","\n","      Sex MaritalStatus  Age          Fault         PolicyType  ...  \\\n","0  Female        Single   21  Policy Holder  Sport - Liability  ...   \n","1    Male        Single   34  Policy Holder  Sport - Collision  ...   \n","2    Male       Married   47  Policy Holder  Sport - Collision  ...   \n","3    Male       Married   65    Third Party  Sedan - Liability  ...   \n","4  Female        Single   27    Third Party  Sport - Collision  ...   \n","\n","  AgeOfVehicle AgeOfPolicyHolder  PoliceReportFiled  WitnessPresent  \\\n","0      3 years          26 to 30                 No              No   \n","1      6 years          31 to 35                Yes              No   \n","2      7 years          41 to 50                 No              No   \n","3  more than 7          51 to 65                Yes              No   \n","4      5 years          31 to 35                 No              No   \n","\n","   AgentType  NumberOfSuppliments AddressChange-Claim NumberOfCars BasePolicy  \\\n","0   External                 none              1 year       3 to 4  Liability   \n","1   External                 none           no change    1 vehicle  Collision   \n","2   External                 none           no change    1 vehicle  Collision   \n","3   External          more than 5           no change    1 vehicle  Liability   \n","4   External                 none           no change    1 vehicle  Collision   \n","\n","  FraudFound  \n","0         No  \n","1         No  \n","2         No  \n","3         No  \n","4         No  \n","\n","[5 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-96a8ded5-231a-490f-bf58-3fba89b46c7e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Make</th>\n","      <th>AccidentArea</th>\n","      <th>DayOfWeekClaimed</th>\n","      <th>MonthClaimed</th>\n","      <th>WeekOfMonthClaimed</th>\n","      <th>Sex</th>\n","      <th>MaritalStatus</th>\n","      <th>Age</th>\n","      <th>Fault</th>\n","      <th>PolicyType</th>\n","      <th>...</th>\n","      <th>AgeOfVehicle</th>\n","      <th>AgeOfPolicyHolder</th>\n","      <th>PoliceReportFiled</th>\n","      <th>WitnessPresent</th>\n","      <th>AgentType</th>\n","      <th>NumberOfSuppliments</th>\n","      <th>AddressChange-Claim</th>\n","      <th>NumberOfCars</th>\n","      <th>BasePolicy</th>\n","      <th>FraudFound</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Honda</td>\n","      <td>Urban</td>\n","      <td>Tuesday</td>\n","      <td>Jan</td>\n","      <td>1</td>\n","      <td>Female</td>\n","      <td>Single</td>\n","      <td>21</td>\n","      <td>Policy Holder</td>\n","      <td>Sport - Liability</td>\n","      <td>...</td>\n","      <td>3 years</td>\n","      <td>26 to 30</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>External</td>\n","      <td>none</td>\n","      <td>1 year</td>\n","      <td>3 to 4</td>\n","      <td>Liability</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Honda</td>\n","      <td>Urban</td>\n","      <td>Monday</td>\n","      <td>Jan</td>\n","      <td>4</td>\n","      <td>Male</td>\n","      <td>Single</td>\n","      <td>34</td>\n","      <td>Policy Holder</td>\n","      <td>Sport - Collision</td>\n","      <td>...</td>\n","      <td>6 years</td>\n","      <td>31 to 35</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>External</td>\n","      <td>none</td>\n","      <td>no change</td>\n","      <td>1 vehicle</td>\n","      <td>Collision</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Honda</td>\n","      <td>Urban</td>\n","      <td>Thursday</td>\n","      <td>Nov</td>\n","      <td>2</td>\n","      <td>Male</td>\n","      <td>Married</td>\n","      <td>47</td>\n","      <td>Policy Holder</td>\n","      <td>Sport - Collision</td>\n","      <td>...</td>\n","      <td>7 years</td>\n","      <td>41 to 50</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>External</td>\n","      <td>none</td>\n","      <td>no change</td>\n","      <td>1 vehicle</td>\n","      <td>Collision</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Toyota</td>\n","      <td>Rural</td>\n","      <td>Friday</td>\n","      <td>Jul</td>\n","      <td>1</td>\n","      <td>Male</td>\n","      <td>Married</td>\n","      <td>65</td>\n","      <td>Third Party</td>\n","      <td>Sedan - Liability</td>\n","      <td>...</td>\n","      <td>more than 7</td>\n","      <td>51 to 65</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>External</td>\n","      <td>more than 5</td>\n","      <td>no change</td>\n","      <td>1 vehicle</td>\n","      <td>Liability</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Honda</td>\n","      <td>Urban</td>\n","      <td>Tuesday</td>\n","      <td>Feb</td>\n","      <td>2</td>\n","      <td>Female</td>\n","      <td>Single</td>\n","      <td>27</td>\n","      <td>Third Party</td>\n","      <td>Sport - Collision</td>\n","      <td>...</td>\n","      <td>5 years</td>\n","      <td>31 to 35</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>External</td>\n","      <td>none</td>\n","      <td>no change</td>\n","      <td>1 vehicle</td>\n","      <td>Collision</td>\n","      <td>No</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 29 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-96a8ded5-231a-490f-bf58-3fba89b46c7e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-96a8ded5-231a-490f-bf58-3fba89b46c7e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-96a8ded5-231a-490f-bf58-3fba89b46c7e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-1413727b-aaa3-4e8b-8592-ecdb617781dc\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1413727b-aaa3-4e8b-8592-ecdb617781dc')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-1413727b-aaa3-4e8b-8592-ecdb617781dc button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["drop_cols = [\"Year\", \"Month\", \"WeekOfMonth\", \"DayOfWeek\",  # removed as they add redundancy and noise\n","             \"Days:Policy-Accident\", \"Days:Policy-Claim\"]  # removed as they add redundancy and noise. Plus these are weak, inconsistent signal.\n","df = df.drop(columns=[c for c in drop_cols if c in df.columns])"],"metadata":{"id":"Nie4sHL6bEgY","executionInfo":{"status":"ok","timestamp":1761917422217,"user_tz":-480,"elapsed":59,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RU8J8-fh8tyh","executionInfo":{"status":"ok","timestamp":1761917427138,"user_tz":-480,"elapsed":33,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"657e28f8-4dc2-4070-9329-8abeff33c9cb"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 15420 entries, 0 to 15419\n","Data columns (total 27 columns):\n"," #   Column               Non-Null Count  Dtype \n","---  ------               --------------  ----- \n"," 0   Make                 15420 non-null  object\n"," 1   AccidentArea         15420 non-null  object\n"," 2   DayOfWeekClaimed     15420 non-null  object\n"," 3   MonthClaimed         15420 non-null  object\n"," 4   WeekOfMonthClaimed   15420 non-null  int64 \n"," 5   Sex                  15420 non-null  object\n"," 6   MaritalStatus        15420 non-null  object\n"," 7   Age                  15420 non-null  int64 \n"," 8   Fault                15420 non-null  object\n"," 9   PolicyType           15420 non-null  object\n"," 10  VehicleCategory      15420 non-null  object\n"," 11  VehiclePrice         15420 non-null  object\n"," 12  PolicyNumber         15420 non-null  int64 \n"," 13  RepNumber            15420 non-null  int64 \n"," 14  Deductible           15420 non-null  int64 \n"," 15  DriverRating         15420 non-null  int64 \n"," 16  PastNumberOfClaims   15420 non-null  object\n"," 17  AgeOfVehicle         15420 non-null  object\n"," 18  AgeOfPolicyHolder    15420 non-null  object\n"," 19  PoliceReportFiled    15420 non-null  object\n"," 20  WitnessPresent       15420 non-null  object\n"," 21  AgentType            15420 non-null  object\n"," 22  NumberOfSuppliments  15420 non-null  object\n"," 23  AddressChange-Claim  15420 non-null  object\n"," 24  NumberOfCars         15420 non-null  object\n"," 25  BasePolicy           15420 non-null  object\n"," 26  FraudFound           15420 non-null  object\n","dtypes: int64(6), object(21)\n","memory usage: 3.2+ MB\n"]}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"dy7YAwuX8yh1","executionInfo":{"status":"ok","timestamp":1761917432112,"user_tz":-480,"elapsed":97,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"e3d18e68-dd0d-4222-bee1-2c57cb740cbb"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       WeekOfMonthClaimed           Age  PolicyNumber     RepNumber  \\\n","count        15420.000000  15420.000000  15420.000000  15420.000000   \n","mean             2.693969     39.855707   7710.500000      8.483268   \n","std              1.259115     13.492377   4451.514911      4.599948   \n","min              1.000000      0.000000      1.000000      1.000000   \n","25%              2.000000     31.000000   3855.750000      5.000000   \n","50%              3.000000     38.000000   7710.500000      8.000000   \n","75%              4.000000     48.000000  11565.250000     12.000000   \n","max              5.000000     80.000000  15420.000000     16.000000   \n","\n","         Deductible  DriverRating  \n","count  15420.000000  15420.000000  \n","mean     407.704280      2.487808  \n","std       43.950998      1.119453  \n","min      300.000000      1.000000  \n","25%      400.000000      1.000000  \n","50%      400.000000      2.000000  \n","75%      400.000000      3.000000  \n","max      700.000000      4.000000  "],"text/html":["\n","  <div id=\"df-5a1683df-1d62-445a-b6a3-76da1e58103d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>WeekOfMonthClaimed</th>\n","      <th>Age</th>\n","      <th>PolicyNumber</th>\n","      <th>RepNumber</th>\n","      <th>Deductible</th>\n","      <th>DriverRating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>15420.000000</td>\n","      <td>15420.000000</td>\n","      <td>15420.000000</td>\n","      <td>15420.000000</td>\n","      <td>15420.000000</td>\n","      <td>15420.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2.693969</td>\n","      <td>39.855707</td>\n","      <td>7710.500000</td>\n","      <td>8.483268</td>\n","      <td>407.704280</td>\n","      <td>2.487808</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1.259115</td>\n","      <td>13.492377</td>\n","      <td>4451.514911</td>\n","      <td>4.599948</td>\n","      <td>43.950998</td>\n","      <td>1.119453</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>300.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2.000000</td>\n","      <td>31.000000</td>\n","      <td>3855.750000</td>\n","      <td>5.000000</td>\n","      <td>400.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>3.000000</td>\n","      <td>38.000000</td>\n","      <td>7710.500000</td>\n","      <td>8.000000</td>\n","      <td>400.000000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>4.000000</td>\n","      <td>48.000000</td>\n","      <td>11565.250000</td>\n","      <td>12.000000</td>\n","      <td>400.000000</td>\n","      <td>3.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>5.000000</td>\n","      <td>80.000000</td>\n","      <td>15420.000000</td>\n","      <td>16.000000</td>\n","      <td>700.000000</td>\n","      <td>4.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5a1683df-1d62-445a-b6a3-76da1e58103d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5a1683df-1d62-445a-b6a3-76da1e58103d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5a1683df-1d62-445a-b6a3-76da1e58103d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-0beed662-96d3-4caf-a3a8-4c63984808dc\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0beed662-96d3-4caf-a3a8-4c63984808dc')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-0beed662-96d3-4caf-a3a8-4c63984808dc button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"WeekOfMonthClaimed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5450.836171779896,\n        \"min\": 1.0,\n        \"max\": 15420.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2.693968871595331,\n          3.0,\n          15420.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5439.200353376976,\n        \"min\": 0.0,\n        \"max\": 15420.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          39.855706874189366,\n          38.0,\n          15420.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PolicyNumber\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5557.137807953999,\n        \"min\": 1.0,\n        \"max\": 15420.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          15420.0,\n          7710.5,\n          11565.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RepNumber\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5449.013122381469,\n        \"min\": 1.0,\n        \"max\": 15420.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          8.483268482490272,\n          8.0,\n          15420.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Deductible\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5320.868134174735,\n        \"min\": 43.95099795219601,\n        \"max\": 15420.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          15420.0,\n          407.70428015564204,\n          700.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DriverRating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5451.0556091626295,\n        \"min\": 1.0,\n        \"max\": 15420.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          15420.0,\n          2.4878080415045396,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X2Wzji2O86v4","executionInfo":{"status":"ok","timestamp":1761917436472,"user_tz":-480,"elapsed":23,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"95bdc1ef-b264-41df-92e5-234e612ded02"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(15420, 27)"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["target = \"FraudFound\""],"metadata":{"id":"MODTMfTxdqp9","executionInfo":{"status":"ok","timestamp":1761917456835,"user_tz":-480,"elapsed":7,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["anomaly_count = (df[target] == 'Yes').sum()\n","normal_count = (df[target] == 'No').sum()\n","\n","print(\"Number of anomaly:\", anomaly_count)\n","print(\"Number of normal:\", normal_count)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kPP-BBFK8_2B","executionInfo":{"status":"ok","timestamp":1761917474090,"user_tz":-480,"elapsed":54,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"fce38fa1-d7cc-4471-c8c5-3849e23cac25"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of anomaly: 923\n","Number of normal: 14497\n"]}]},{"cell_type":"code","source":["plt.figure(figsize=(10, 8))\n","\n","is_anom_count = df[target].value_counts()\n","\n","plt.pie(is_anom_count, labels=['No', 'Yes'], autopct=\"%0.1f%%\")\n","plt.title('Is Anomaly')\n","plt.show()\n","#Imbalanced"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":675},"id":"zu1yBGXI9ahP","executionInfo":{"status":"ok","timestamp":1761917487779,"user_tz":-480,"elapsed":217,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"a9f4637f-80ae-4f71-f375-12a058d147c6"},"execution_count":24,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Show first 10 anomalies\n","df[df[target] == 'Yes'].head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":603},"id":"iOwyhBdD92kp","executionInfo":{"status":"ok","timestamp":1761917506806,"user_tz":-480,"elapsed":65,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"f5132060-b151-4266-b514-442d08960bc5"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          Make AccidentArea DayOfWeekClaimed MonthClaimed  WeekOfMonthClaimed  \\\n","28       Honda        Urban          Tuesday          Sep                   4   \n","52       Honda        Rural        Wednesday          Jan                   4   \n","53       Honda        Urban        Wednesday          Aug                   2   \n","94       Honda        Urban           Friday          Jan                   3   \n","96      Toyota        Urban          Tuesday          Jan                   1   \n","100  Chevrolet        Urban        Wednesday          Jan                   2   \n","113     Accura        Rural          Tuesday          Jan                   2   \n","118      Mazda        Urban        Wednesday          Dec                   1   \n","119      Honda        Rural           Friday          Dec                   3   \n","147     Toyota        Rural          Tuesday          May                   3   \n","\n","      Sex MaritalStatus  Age          Fault            PolicyType  ...  \\\n","28   Male        Single    0  Policy Holder    Sedan - All Perils  ...   \n","52   Male       Married   21  Policy Holder     Sport - Collision  ...   \n","53   Male       Married   50  Policy Holder     Sedan - Collision  ...   \n","94   Male        Single   34  Policy Holder     Sport - Collision  ...   \n","96   Male       Married   38  Policy Holder     Sedan - Collision  ...   \n","100  Male       Married   31  Policy Holder  Utility - All Perils  ...   \n","113  Male       Married   56  Policy Holder  Utility - All Perils  ...   \n","118  Male        Single   68  Policy Holder    Sedan - All Perils  ...   \n","119  Male        Single    0  Policy Holder    Sedan - All Perils  ...   \n","147  Male       Married   39  Policy Holder    Sedan - All Perils  ...   \n","\n","    AgeOfVehicle AgeOfPolicyHolder  PoliceReportFiled  WitnessPresent  \\\n","28           new          16 to 17                 No              No   \n","52       4 years          26 to 30                 No              No   \n","53   more than 7          41 to 50                 No              No   \n","94       7 years          31 to 35                 No              No   \n","96       7 years          36 to 40                 No              No   \n","100      7 years          31 to 35                 No              No   \n","113  more than 7          51 to 65                 No              No   \n","118      5 years           over 65                 No              No   \n","119          new          16 to 17                 No              No   \n","147  more than 7          36 to 40                 No              No   \n","\n","     AgentType  NumberOfSuppliments AddressChange-Claim NumberOfCars  \\\n","28    External                 none           no change    1 vehicle   \n","52    External               3 to 5           no change    1 vehicle   \n","53    External               3 to 5           no change    1 vehicle   \n","94    External               3 to 5           no change    1 vehicle   \n","96    External                 none           no change    1 vehicle   \n","100   External          more than 5           no change    1 vehicle   \n","113   External                 none           no change    1 vehicle   \n","118   External                 none           no change    1 vehicle   \n","119   External                 none           no change    1 vehicle   \n","147   External          more than 5      under 6 months   2 vehicles   \n","\n","     BasePolicy FraudFound  \n","28   All Perils        Yes  \n","52    Collision        Yes  \n","53    Collision        Yes  \n","94    Collision        Yes  \n","96    Collision        Yes  \n","100  All Perils        Yes  \n","113  All Perils        Yes  \n","118  All Perils        Yes  \n","119  All Perils        Yes  \n","147  All Perils        Yes  \n","\n","[10 rows x 27 columns]"],"text/html":["\n","  <div id=\"df-27fef65f-9b14-4399-88c4-3f0ccb3291b3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Make</th>\n","      <th>AccidentArea</th>\n","      <th>DayOfWeekClaimed</th>\n","      <th>MonthClaimed</th>\n","      <th>WeekOfMonthClaimed</th>\n","      <th>Sex</th>\n","      <th>MaritalStatus</th>\n","      <th>Age</th>\n","      <th>Fault</th>\n","      <th>PolicyType</th>\n","      <th>...</th>\n","      <th>AgeOfVehicle</th>\n","      <th>AgeOfPolicyHolder</th>\n","      <th>PoliceReportFiled</th>\n","      <th>WitnessPresent</th>\n","      <th>AgentType</th>\n","      <th>NumberOfSuppliments</th>\n","      <th>AddressChange-Claim</th>\n","      <th>NumberOfCars</th>\n","      <th>BasePolicy</th>\n","      <th>FraudFound</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>28</th>\n","      <td>Honda</td>\n","      <td>Urban</td>\n","      <td>Tuesday</td>\n","      <td>Sep</td>\n","      <td>4</td>\n","      <td>Male</td>\n","      <td>Single</td>\n","      <td>0</td>\n","      <td>Policy Holder</td>\n","      <td>Sedan - All Perils</td>\n","      <td>...</td>\n","      <td>new</td>\n","      <td>16 to 17</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>External</td>\n","      <td>none</td>\n","      <td>no change</td>\n","      <td>1 vehicle</td>\n","      <td>All Perils</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>Honda</td>\n","      <td>Rural</td>\n","      <td>Wednesday</td>\n","      <td>Jan</td>\n","      <td>4</td>\n","      <td>Male</td>\n","      <td>Married</td>\n","      <td>21</td>\n","      <td>Policy Holder</td>\n","      <td>Sport - Collision</td>\n","      <td>...</td>\n","      <td>4 years</td>\n","      <td>26 to 30</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>External</td>\n","      <td>3 to 5</td>\n","      <td>no change</td>\n","      <td>1 vehicle</td>\n","      <td>Collision</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>Honda</td>\n","      <td>Urban</td>\n","      <td>Wednesday</td>\n","      <td>Aug</td>\n","      <td>2</td>\n","      <td>Male</td>\n","      <td>Married</td>\n","      <td>50</td>\n","      <td>Policy Holder</td>\n","      <td>Sedan - Collision</td>\n","      <td>...</td>\n","      <td>more than 7</td>\n","      <td>41 to 50</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>External</td>\n","      <td>3 to 5</td>\n","      <td>no change</td>\n","      <td>1 vehicle</td>\n","      <td>Collision</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>94</th>\n","      <td>Honda</td>\n","      <td>Urban</td>\n","      <td>Friday</td>\n","      <td>Jan</td>\n","      <td>3</td>\n","      <td>Male</td>\n","      <td>Single</td>\n","      <td>34</td>\n","      <td>Policy Holder</td>\n","      <td>Sport - Collision</td>\n","      <td>...</td>\n","      <td>7 years</td>\n","      <td>31 to 35</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>External</td>\n","      <td>3 to 5</td>\n","      <td>no change</td>\n","      <td>1 vehicle</td>\n","      <td>Collision</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>Toyota</td>\n","      <td>Urban</td>\n","      <td>Tuesday</td>\n","      <td>Jan</td>\n","      <td>1</td>\n","      <td>Male</td>\n","      <td>Married</td>\n","      <td>38</td>\n","      <td>Policy Holder</td>\n","      <td>Sedan - Collision</td>\n","      <td>...</td>\n","      <td>7 years</td>\n","      <td>36 to 40</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>External</td>\n","      <td>none</td>\n","      <td>no change</td>\n","      <td>1 vehicle</td>\n","      <td>Collision</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>100</th>\n","      <td>Chevrolet</td>\n","      <td>Urban</td>\n","      <td>Wednesday</td>\n","      <td>Jan</td>\n","      <td>2</td>\n","      <td>Male</td>\n","      <td>Married</td>\n","      <td>31</td>\n","      <td>Policy Holder</td>\n","      <td>Utility - All Perils</td>\n","      <td>...</td>\n","      <td>7 years</td>\n","      <td>31 to 35</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>External</td>\n","      <td>more than 5</td>\n","      <td>no change</td>\n","      <td>1 vehicle</td>\n","      <td>All Perils</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>113</th>\n","      <td>Accura</td>\n","      <td>Rural</td>\n","      <td>Tuesday</td>\n","      <td>Jan</td>\n","      <td>2</td>\n","      <td>Male</td>\n","      <td>Married</td>\n","      <td>56</td>\n","      <td>Policy Holder</td>\n","      <td>Utility - All Perils</td>\n","      <td>...</td>\n","      <td>more than 7</td>\n","      <td>51 to 65</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>External</td>\n","      <td>none</td>\n","      <td>no change</td>\n","      <td>1 vehicle</td>\n","      <td>All Perils</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>118</th>\n","      <td>Mazda</td>\n","      <td>Urban</td>\n","      <td>Wednesday</td>\n","      <td>Dec</td>\n","      <td>1</td>\n","      <td>Male</td>\n","      <td>Single</td>\n","      <td>68</td>\n","      <td>Policy Holder</td>\n","      <td>Sedan - All Perils</td>\n","      <td>...</td>\n","      <td>5 years</td>\n","      <td>over 65</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>External</td>\n","      <td>none</td>\n","      <td>no change</td>\n","      <td>1 vehicle</td>\n","      <td>All Perils</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>119</th>\n","      <td>Honda</td>\n","      <td>Rural</td>\n","      <td>Friday</td>\n","      <td>Dec</td>\n","      <td>3</td>\n","      <td>Male</td>\n","      <td>Single</td>\n","      <td>0</td>\n","      <td>Policy Holder</td>\n","      <td>Sedan - All Perils</td>\n","      <td>...</td>\n","      <td>new</td>\n","      <td>16 to 17</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>External</td>\n","      <td>none</td>\n","      <td>no change</td>\n","      <td>1 vehicle</td>\n","      <td>All Perils</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>Toyota</td>\n","      <td>Rural</td>\n","      <td>Tuesday</td>\n","      <td>May</td>\n","      <td>3</td>\n","      <td>Male</td>\n","      <td>Married</td>\n","      <td>39</td>\n","      <td>Policy Holder</td>\n","      <td>Sedan - All Perils</td>\n","      <td>...</td>\n","      <td>more than 7</td>\n","      <td>36 to 40</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>External</td>\n","      <td>more than 5</td>\n","      <td>under 6 months</td>\n","      <td>2 vehicles</td>\n","      <td>All Perils</td>\n","      <td>Yes</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10 rows Ã— 27 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-27fef65f-9b14-4399-88c4-3f0ccb3291b3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-27fef65f-9b14-4399-88c4-3f0ccb3291b3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-27fef65f-9b14-4399-88c4-3f0ccb3291b3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-638b58b1-ceb1-40c6-9279-813e1f90f01a\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-638b58b1-ceb1-40c6-9279-813e1f90f01a')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-638b58b1-ceb1-40c6-9279-813e1f90f01a button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["df_reduced = df.sample(frac=1, random_state=42)\n","\n","print(df_reduced.shape)"],"metadata":{"id":"CC-TfI_I-fA4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1761917541969,"user_tz":-480,"elapsed":21,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"52486844-54f6-4931-c34e-f784a03b3b9e"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["(15420, 27)\n"]}]},{"cell_type":"code","source":["df_reduced[target] = df_reduced[target].apply(lambda x: 1 if x == 'Yes' else 0)"],"metadata":{"id":"blmGtYczd9f9","executionInfo":{"status":"ok","timestamp":1761917556275,"user_tz":-480,"elapsed":22,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["df_reduced.head(1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":145},"id":"cSoRho7EeFU0","executionInfo":{"status":"ok","timestamp":1761917563697,"user_tz":-480,"elapsed":58,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"fcf88146-b293-4004-f17f-d64f93b23056"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Make AccidentArea DayOfWeekClaimed MonthClaimed  WeekOfMonthClaimed  \\\n","4291  Pontiac        Urban        Wednesday          Sep                   2   \n","\n","       Sex MaritalStatus  Age          Fault         PolicyType  ...  \\\n","4291  Male       Married   46  Policy Holder  Sedan - Collision  ...   \n","\n","     AgeOfVehicle AgeOfPolicyHolder  PoliceReportFiled  WitnessPresent  \\\n","4291  more than 7          41 to 50                 No              No   \n","\n","      AgentType  NumberOfSuppliments AddressChange-Claim NumberOfCars  \\\n","4291   External               3 to 5           no change    1 vehicle   \n","\n","     BasePolicy FraudFound  \n","4291  Collision          0  \n","\n","[1 rows x 27 columns]"],"text/html":["\n","  <div id=\"df-f3f40b49-118e-4690-a438-e52ca1ffe7b7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Make</th>\n","      <th>AccidentArea</th>\n","      <th>DayOfWeekClaimed</th>\n","      <th>MonthClaimed</th>\n","      <th>WeekOfMonthClaimed</th>\n","      <th>Sex</th>\n","      <th>MaritalStatus</th>\n","      <th>Age</th>\n","      <th>Fault</th>\n","      <th>PolicyType</th>\n","      <th>...</th>\n","      <th>AgeOfVehicle</th>\n","      <th>AgeOfPolicyHolder</th>\n","      <th>PoliceReportFiled</th>\n","      <th>WitnessPresent</th>\n","      <th>AgentType</th>\n","      <th>NumberOfSuppliments</th>\n","      <th>AddressChange-Claim</th>\n","      <th>NumberOfCars</th>\n","      <th>BasePolicy</th>\n","      <th>FraudFound</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4291</th>\n","      <td>Pontiac</td>\n","      <td>Urban</td>\n","      <td>Wednesday</td>\n","      <td>Sep</td>\n","      <td>2</td>\n","      <td>Male</td>\n","      <td>Married</td>\n","      <td>46</td>\n","      <td>Policy Holder</td>\n","      <td>Sedan - Collision</td>\n","      <td>...</td>\n","      <td>more than 7</td>\n","      <td>41 to 50</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>External</td>\n","      <td>3 to 5</td>\n","      <td>no change</td>\n","      <td>1 vehicle</td>\n","      <td>Collision</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1 rows Ã— 27 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f3f40b49-118e-4690-a438-e52ca1ffe7b7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f3f40b49-118e-4690-a438-e52ca1ffe7b7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f3f40b49-118e-4690-a438-e52ca1ffe7b7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_reduced"}},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["anom_count = (df_reduced[target] == 1).sum()\n","normal_count = (df_reduced[target] == 0).sum()\n","\n","print(\"Number of anomalies:\", anom_count)\n","print(\"Number of normals:\", normal_count)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FuoMn4pUeHIg","executionInfo":{"status":"ok","timestamp":1761917572267,"user_tz":-480,"elapsed":19,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"e1454b5a-7529-4361-b0b2-e504ca7f5376"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of anomalies: 923\n","Number of normals: 14497\n"]}]},{"cell_type":"code","source":["#Proportion of attacks in network traffic\n","plt.figure(figsize = (10, 6))\n","target_count = df_reduced[target].value_counts()\n","plt.figure(figsize = (12, 8))\n","plt.pie(target_count, labels = ['No', 'Yes'], autopct=\"%0.1f%%\")\n","plt.title('Is Anomaly')\n","plt.show()\n","#Conclusion: Imbalanced dataset"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":692},"id":"bX_hukTjeJO-","executionInfo":{"status":"ok","timestamp":1761917577899,"user_tz":-480,"elapsed":96,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"f75a2c48-aeee-4fdc-b488-8df4481e3314"},"execution_count":32,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 0 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# See how many missing values per column\n","df_reduced.isna().sum()\n","\n","# Or total missing values in the entire dataframe\n","total_nans = df_reduced.isna().sum().sum()\n","print(f\"Total NaN values: {total_nans:,}\")\n","\n","# To quickly view which columns have missing data\n","nan_cols = df_reduced.columns[df.isna().any()].tolist()\n","print(\"Columns with NaNs:\", nan_cols)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kFy9n8m5eKky","executionInfo":{"status":"ok","timestamp":1761917585437,"user_tz":-480,"elapsed":52,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"4f72f505-a3a1-4458-a7b1-7f3cf105553c"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["Total NaN values: 0\n","Columns with NaNs: []\n"]}]},{"cell_type":"code","source":["# Check if there are any infinite values\n","inf_mask = df.isin([np.inf, -np.inf])\n","has_inf = inf_mask.any().any()\n","print(f\"Contains infinite values: {has_inf}\")\n","\n","# Count how many per column\n","inf_counts = inf_mask.sum()\n","inf_counts[inf_counts > 0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":102},"id":"u5r6Mh0YeMcU","executionInfo":{"status":"ok","timestamp":1761917622122,"user_tz":-480,"elapsed":23,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"21f0e9d1-45cd-4406-d582-60af4c0b59a7"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["Contains infinite values: False\n"]},{"output_type":"execute_result","data":{"text/plain":["Series([], dtype: int64)"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["# Separate features and label\n","X = df_reduced.drop(columns=[target])\n","y = df_reduced[target]"],"metadata":{"id":"MTOZ6h9zeOCX","executionInfo":{"status":"ok","timestamp":1761917629817,"user_tz":-480,"elapsed":38,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["X_train, X_temp, y_train, y_temp = train_test_split(\n","    X, y, test_size=0.3, stratify=y, random_state=42\n",")\n","\n","# Split temp into validation (15%) and test (15%)\n","X_val, X_test, y_val, y_test = train_test_split(\n","    X_temp, y_temp, test_size=0.5, stratify=y_temp, random_state=42\n",")"],"metadata":{"id":"srP6qHhceXR9","executionInfo":{"status":"ok","timestamp":1761917636190,"user_tz":-480,"elapsed":108,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["num_cols = X_train.select_dtypes(include=[np.number]).columns\n","\n","scaler = StandardScaler()\n","\n","X_train[num_cols] = scaler.fit_transform(X_train[num_cols])\n","X_val[num_cols] = scaler.transform(X_val[num_cols])\n","X_test[num_cols] = scaler.transform(X_test[num_cols])"],"metadata":{"id":"Da2RtLCReY0X","executionInfo":{"status":"ok","timestamp":1761917642169,"user_tz":-480,"elapsed":117,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["train_df = pd.concat([X_train, y_train], axis=1)\n","valid_df = pd.concat([X_val, y_val], axis=1)\n","test_df = pd.concat([X_test, y_test], axis=1)"],"metadata":{"id":"9k4s4tkPeaRh","executionInfo":{"status":"ok","timestamp":1761917649212,"user_tz":-480,"elapsed":31,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["print(f\"Train shape: {train_df.shape}, anomaly ratio={train_df[target].mean():.4%}\")\n","print(f\"Valid shape: {valid_df.shape}, anomaly ratio={valid_df[target].mean():.4%}\")\n","print(f\"Test shape:  {test_df.shape},  anomaly ratio={test_df[target].mean():.4%}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iQ4ooUqdecBQ","executionInfo":{"status":"ok","timestamp":1761917655818,"user_tz":-480,"elapsed":12,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"5c3a720b-3e08-4462-b23d-ecc2038dcb73"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["Train shape: (10794, 27), anomaly ratio=5.9848%\n","Valid shape: (2313, 27), anomaly ratio=6.0095%\n","Test shape:  (2313, 27),  anomaly ratio=5.9663%\n"]}]},{"cell_type":"code","source":["import os\n","\n","# Create the folder path (it won't exist by default)\n","save_dir = \"/content/drive/MyDrive/datasets/car_claim\"\n","\n","# Make sure the directory exists\n","os.makedirs(save_dir, exist_ok=True)\n","\n","# Now safely save your splits\n","train_df.to_csv(f\"{save_dir}/train.csv\", index=False)\n","valid_df.to_csv(f\"{save_dir}/val.csv\", index=False)\n","test_df.to_csv(f\"{save_dir}/test.csv\", index=False)\n","\n","print(\"Files saved in:\", save_dir)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0eA5mHlVedoc","executionInfo":{"status":"ok","timestamp":1761917676520,"user_tz":-480,"elapsed":514,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"317b005d-4932-4671-c97d-2f07f711c026"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["Files saved in: /content/drive/MyDrive/datasets/car_claim\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"oewVFxnIeikS"},"execution_count":null,"outputs":[]}]}