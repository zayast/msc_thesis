{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyN97cgSFlNRq+5IFzHj7VIT"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"u82pkANv6KzH","executionInfo":{"status":"ok","timestamp":1761917960114,"user_tz":-480,"elapsed":2025,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}}},"outputs":[],"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import numpy as np\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EBT1DPPD7aq-","executionInfo":{"status":"ok","timestamp":1761918004410,"user_tz":-480,"elapsed":44294,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"879ae75b-2934-4e32-f85d-913579142264"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["df_path = '/content/drive/MyDrive/datasets/annthyroid.csv'\n","\n","df = pd.read_csv(df_path, delimiter=';')"],"metadata":{"id":"rEVEzZjU3IpP","executionInfo":{"status":"ok","timestamp":1761919705218,"user_tz":-480,"elapsed":745,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":236},"id":"_yQWSQAF8oZc","executionInfo":{"status":"ok","timestamp":1761920094899,"user_tz":-480,"elapsed":93,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"60af211d-a64c-4b50-f53c-c74cbf0dbc9c"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Age  Sex  on_thyroxine  query_on_thyroxine  on_antithyroid_medication  \\\n","0  0.45  1.0           0.0                 0.0                        0.0   \n","1  0.61  0.0           0.0                 0.0                        0.0   \n","2  0.16  0.0           1.0                 0.0                        0.0   \n","3  0.85  0.0           0.0                 0.0                        0.0   \n","4  0.75  1.0           0.0                 0.0                        0.0   \n","\n","   sick  pregnant  thyroid_surgery  I131_treatment  query_hypothyroid  ...  \\\n","0   0.0       0.0              0.0             0.0                0.0  ...   \n","1   1.0       0.0              0.0             0.0                0.0  ...   \n","2   0.0       0.0              0.0             0.0                0.0  ...   \n","3   0.0       0.0              0.0             0.0                0.0  ...   \n","4   0.0       0.0              0.0             0.0                0.0  ...   \n","\n","   goitre  tumor  hypopituitary  psych    TSH  T3_measured  TT4_measured  \\\n","0     0.0    0.0            0.0    0.0   61.0          6.0          23.0   \n","1     0.0    0.0            0.0    0.0   29.0         15.0          61.0   \n","2     0.0    1.0            0.0    0.0   29.0         19.0          58.0   \n","3     0.0    0.0            0.0    0.0  114.0          3.0          24.0   \n","4     0.0    0.0            0.0    0.0   49.0          3.0           5.0   \n","\n","   T4U_measured  FTI_measured  Outlier_label   \n","0          87.0          26.0               o  \n","1          96.0          64.0               o  \n","2         103.0          56.0               o  \n","3          61.0          39.0               o  \n","4         116.0           4.0               o  \n","\n","[5 rows x 22 columns]"],"text/html":["\n","  <div id=\"df-5ca2b9c5-2094-4305-969d-262c24c63e2c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>on_thyroxine</th>\n","      <th>query_on_thyroxine</th>\n","      <th>on_antithyroid_medication</th>\n","      <th>sick</th>\n","      <th>pregnant</th>\n","      <th>thyroid_surgery</th>\n","      <th>I131_treatment</th>\n","      <th>query_hypothyroid</th>\n","      <th>...</th>\n","      <th>goitre</th>\n","      <th>tumor</th>\n","      <th>hypopituitary</th>\n","      <th>psych</th>\n","      <th>TSH</th>\n","      <th>T3_measured</th>\n","      <th>TT4_measured</th>\n","      <th>T4U_measured</th>\n","      <th>FTI_measured</th>\n","      <th>Outlier_label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.45</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>61.0</td>\n","      <td>6.0</td>\n","      <td>23.0</td>\n","      <td>87.0</td>\n","      <td>26.0</td>\n","      <td>o</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.61</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>29.0</td>\n","      <td>15.0</td>\n","      <td>61.0</td>\n","      <td>96.0</td>\n","      <td>64.0</td>\n","      <td>o</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.16</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>29.0</td>\n","      <td>19.0</td>\n","      <td>58.0</td>\n","      <td>103.0</td>\n","      <td>56.0</td>\n","      <td>o</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.85</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>114.0</td>\n","      <td>3.0</td>\n","      <td>24.0</td>\n","      <td>61.0</td>\n","      <td>39.0</td>\n","      <td>o</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.75</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>49.0</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","      <td>116.0</td>\n","      <td>4.0</td>\n","      <td>o</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 22 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5ca2b9c5-2094-4305-969d-262c24c63e2c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5ca2b9c5-2094-4305-969d-262c24c63e2c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5ca2b9c5-2094-4305-969d-262c24c63e2c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-0b7aefa6-fb26-47ac-b7c2-34edd6c443a2\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0b7aefa6-fb26-47ac-b7c2-34edd6c443a2')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-0b7aefa6-fb26-47ac-b7c2-34edd6c443a2 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["drop_cols = [\"Unnamed: 22\", \"Unnamed: 23\"]   #remove them as NAN\n","df = df.drop(columns=[c for c in drop_cols if c in df.columns])"],"metadata":{"id":"MEoQDSx4HRsH","executionInfo":{"status":"ok","timestamp":1761920100932,"user_tz":-480,"elapsed":18,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RU8J8-fh8tyh","executionInfo":{"status":"ok","timestamp":1761920104771,"user_tz":-480,"elapsed":26,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"2e858159-f190-4357-95f3-3065536b9e3e"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 6916 entries, 0 to 6915\n","Data columns (total 22 columns):\n"," #   Column                     Non-Null Count  Dtype  \n","---  ------                     --------------  -----  \n"," 0   Age                        6916 non-null   float64\n"," 1   Sex                        6916 non-null   float64\n"," 2   on_thyroxine               6916 non-null   float64\n"," 3   query_on_thyroxine         6916 non-null   float64\n"," 4   on_antithyroid_medication  6916 non-null   float64\n"," 5   sick                       6916 non-null   float64\n"," 6   pregnant                   6916 non-null   float64\n"," 7   thyroid_surgery            6916 non-null   float64\n"," 8   I131_treatment             6916 non-null   float64\n"," 9   query_hypothyroid          6916 non-null   float64\n"," 10  query_hyperthyroid         6916 non-null   float64\n"," 11  lithium                    6916 non-null   float64\n"," 12  goitre                     6916 non-null   float64\n"," 13  tumor                      6916 non-null   float64\n"," 14  hypopituitary              6916 non-null   float64\n"," 15  psych                      6916 non-null   float64\n"," 16  TSH                        6916 non-null   float64\n"," 17  T3_measured                6916 non-null   float64\n"," 18  TT4_measured               6916 non-null   float64\n"," 19  T4U_measured               6916 non-null   float64\n"," 20  FTI_measured               6916 non-null   float64\n"," 21  Outlier_label              6916 non-null   object \n","dtypes: float64(21), object(1)\n","memory usage: 1.2+ MB\n"]}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":350},"id":"dy7YAwuX8yh1","executionInfo":{"status":"ok","timestamp":1761920107003,"user_tz":-480,"elapsed":141,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"44395533-c69c-420c-fff6-4a32c510024e"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               Age          Sex  on_thyroxine  query_on_thyroxine  \\\n","count  6916.000000  6916.000000   6916.000000         6916.000000   \n","mean      0.595098     0.307548      0.134615            0.015616   \n","std       6.189326     0.461512      0.341337            0.123993   \n","min       0.010000     0.000000      0.000000            0.000000   \n","25%       0.370000     0.000000      0.000000            0.000000   \n","50%       0.540000     0.000000      0.000000            0.000000   \n","75%       0.670000     1.000000      0.000000            0.000000   \n","max     515.000000     1.000000      1.000000            1.000000   \n","\n","       on_antithyroid_medication         sick     pregnant  thyroid_surgery  \\\n","count                6916.000000  6916.000000  6916.000000      6916.000000   \n","mean                    0.013158     0.038317     0.011278         0.014315   \n","std                     0.113959     0.191974     0.105606         0.118793   \n","min                     0.000000     0.000000     0.000000         0.000000   \n","25%                     0.000000     0.000000     0.000000         0.000000   \n","50%                     0.000000     0.000000     0.000000         0.000000   \n","75%                     0.000000     0.000000     0.000000         0.000000   \n","max                     1.000000     1.000000     1.000000         1.000000   \n","\n","       I131_treatment  query_hypothyroid  ...      lithium       goitre  \\\n","count     6916.000000        6916.000000  ...  6916.000000  6916.000000   \n","mean         0.016773           0.062753  ...     0.013013     0.008531   \n","std          0.128428           0.242536  ...     0.113339     0.091975   \n","min          0.000000           0.000000  ...     0.000000     0.000000   \n","25%          0.000000           0.000000  ...     0.000000     0.000000   \n","50%          0.000000           0.000000  ...     0.000000     0.000000   \n","75%          0.000000           0.000000  ...     0.000000     0.000000   \n","max          1.000000           1.000000  ...     1.000000     1.000000   \n","\n","             tumor  hypopituitary        psych          TSH  T3_measured  \\\n","count  6916.000000    6916.000000  6916.000000  6916.000000  6916.000000   \n","mean      0.025448       0.000145     0.049740     1.603466    11.772446   \n","std       0.157494       0.012025     0.217422    14.047218    11.836250   \n","min       0.000000       0.000000     0.000000     0.000000     0.000500   \n","25%       0.000000       0.000000     0.000000     0.000680     0.020100   \n","50%       0.000000       0.000000     0.000000     0.001700    13.000000   \n","75%       0.000000       0.000000     0.000000     0.002700    22.000000   \n","max       1.000000       1.000000     1.000000   494.000000    95.000000   \n","\n","       TT4_measured  T4U_measured  FTI_measured  \n","count   6916.000000   6916.000000   6916.000000  \n","mean      94.253834     88.270139     95.257058  \n","std       50.555642     33.909845     55.031137  \n","min        0.002500      0.050000      0.002400  \n","25%       77.000000     83.000000     81.000000  \n","50%      101.000000     96.000000    105.000000  \n","75%      123.000000    104.000000    125.000000  \n","max      395.000000    233.000000    642.000000  \n","\n","[8 rows x 21 columns]"],"text/html":["\n","  <div id=\"df-2b4fc043-28b3-418f-80a2-0da6460581fa\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>on_thyroxine</th>\n","      <th>query_on_thyroxine</th>\n","      <th>on_antithyroid_medication</th>\n","      <th>sick</th>\n","      <th>pregnant</th>\n","      <th>thyroid_surgery</th>\n","      <th>I131_treatment</th>\n","      <th>query_hypothyroid</th>\n","      <th>...</th>\n","      <th>lithium</th>\n","      <th>goitre</th>\n","      <th>tumor</th>\n","      <th>hypopituitary</th>\n","      <th>psych</th>\n","      <th>TSH</th>\n","      <th>T3_measured</th>\n","      <th>TT4_measured</th>\n","      <th>T4U_measured</th>\n","      <th>FTI_measured</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>6916.000000</td>\n","      <td>6916.000000</td>\n","      <td>6916.000000</td>\n","      <td>6916.000000</td>\n","      <td>6916.000000</td>\n","      <td>6916.000000</td>\n","      <td>6916.000000</td>\n","      <td>6916.000000</td>\n","      <td>6916.000000</td>\n","      <td>6916.000000</td>\n","      <td>...</td>\n","      <td>6916.000000</td>\n","      <td>6916.000000</td>\n","      <td>6916.000000</td>\n","      <td>6916.000000</td>\n","      <td>6916.000000</td>\n","      <td>6916.000000</td>\n","      <td>6916.000000</td>\n","      <td>6916.000000</td>\n","      <td>6916.000000</td>\n","      <td>6916.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.595098</td>\n","      <td>0.307548</td>\n","      <td>0.134615</td>\n","      <td>0.015616</td>\n","      <td>0.013158</td>\n","      <td>0.038317</td>\n","      <td>0.011278</td>\n","      <td>0.014315</td>\n","      <td>0.016773</td>\n","      <td>0.062753</td>\n","      <td>...</td>\n","      <td>0.013013</td>\n","      <td>0.008531</td>\n","      <td>0.025448</td>\n","      <td>0.000145</td>\n","      <td>0.049740</td>\n","      <td>1.603466</td>\n","      <td>11.772446</td>\n","      <td>94.253834</td>\n","      <td>88.270139</td>\n","      <td>95.257058</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>6.189326</td>\n","      <td>0.461512</td>\n","      <td>0.341337</td>\n","      <td>0.123993</td>\n","      <td>0.113959</td>\n","      <td>0.191974</td>\n","      <td>0.105606</td>\n","      <td>0.118793</td>\n","      <td>0.128428</td>\n","      <td>0.242536</td>\n","      <td>...</td>\n","      <td>0.113339</td>\n","      <td>0.091975</td>\n","      <td>0.157494</td>\n","      <td>0.012025</td>\n","      <td>0.217422</td>\n","      <td>14.047218</td>\n","      <td>11.836250</td>\n","      <td>50.555642</td>\n","      <td>33.909845</td>\n","      <td>55.031137</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.010000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000500</td>\n","      <td>0.002500</td>\n","      <td>0.050000</td>\n","      <td>0.002400</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.370000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000680</td>\n","      <td>0.020100</td>\n","      <td>77.000000</td>\n","      <td>83.000000</td>\n","      <td>81.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.540000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.001700</td>\n","      <td>13.000000</td>\n","      <td>101.000000</td>\n","      <td>96.000000</td>\n","      <td>105.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>0.670000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.002700</td>\n","      <td>22.000000</td>\n","      <td>123.000000</td>\n","      <td>104.000000</td>\n","      <td>125.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>515.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>...</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>494.000000</td>\n","      <td>95.000000</td>\n","      <td>395.000000</td>\n","      <td>233.000000</td>\n","      <td>642.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows Ã— 21 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2b4fc043-28b3-418f-80a2-0da6460581fa')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2b4fc043-28b3-418f-80a2-0da6460581fa button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2b4fc043-28b3-418f-80a2-0da6460581fa');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-9a18837d-2063-4921-8a1a-da29761d003a\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9a18837d-2063-4921-8a1a-da29761d003a')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-9a18837d-2063-4921-8a1a-da29761d003a button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X2Wzji2O86v4","executionInfo":{"status":"ok","timestamp":1761920108873,"user_tz":-480,"elapsed":21,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"1170ce41-b116-4fc3-eae0-0831be2746a9"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(6916, 22)"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["target = \"Outlier_label \"   # has hidden whitespace"],"metadata":{"id":"qtrpl6sE9YA8","executionInfo":{"status":"ok","timestamp":1761920194704,"user_tz":-480,"elapsed":10,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["df[target].value_counts(dropna=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"oRAXuTurnX7k","executionInfo":{"status":"ok","timestamp":1761920201690,"user_tz":-480,"elapsed":39,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"18f1521e-6a85-431f-8491-0eb224e8fec6"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Outlier_label \n","n    6666\n","o     250\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Outlier_label</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>n</th>\n","      <td>6666</td>\n","    </tr>\n","    <tr>\n","      <th>o</th>\n","      <td>250</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["anomaly_count = (df[target] == 'o').sum()\n","normal_count = (df[target] == 'n').sum()\n","\n","print(\"Number of anomaly:\", anomaly_count)\n","print(\"Number of normal:\", normal_count)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kPP-BBFK8_2B","executionInfo":{"status":"ok","timestamp":1761920215809,"user_tz":-480,"elapsed":41,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"270fd1a8-7d30-4572-c812-03a41628f20e"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of anomaly: 250\n","Number of normal: 6666\n"]}]},{"cell_type":"code","source":["plt.figure(figsize=(10, 8))\n","\n","is_anom_count = df[target].value_counts()\n","\n","plt.pie(is_anom_count, labels=['No', 'Yes'], autopct=\"%0.1f%%\")\n","plt.title('Is Anomaly')\n","plt.show()\n","#Imbalanced"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":675},"id":"zu1yBGXI9ahP","executionInfo":{"status":"ok","timestamp":1761920223309,"user_tz":-480,"elapsed":346,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"bd4f5afb-12cd-4473-8730-4bc73982bb12"},"execution_count":34,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Show first 10 anomalies\n","df[df[target] == 'o'].head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":392},"id":"iOwyhBdD92kp","executionInfo":{"status":"ok","timestamp":1761920228749,"user_tz":-480,"elapsed":162,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"83cfb07a-f157-4abb-e37d-ec67cc6bbd7c"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Age  Sex  on_thyroxine  query_on_thyroxine  on_antithyroid_medication  \\\n","0  0.45  1.0           0.0                 0.0                        0.0   \n","1  0.61  0.0           0.0                 0.0                        0.0   \n","2  0.16  0.0           1.0                 0.0                        0.0   \n","3  0.85  0.0           0.0                 0.0                        0.0   \n","4  0.75  1.0           0.0                 0.0                        0.0   \n","5  0.85  0.0           0.0                 0.0                        0.0   \n","6  0.85  0.0           0.0                 0.0                        0.0   \n","7  0.49  1.0           0.0                 0.0                        0.0   \n","8  0.51  0.0           0.0                 0.0                        0.0   \n","9  0.72  0.0           1.0                 0.0                        0.0   \n","\n","   sick  pregnant  thyroid_surgery  I131_treatment  query_hypothyroid  ...  \\\n","0   0.0       0.0              0.0             0.0                0.0  ...   \n","1   1.0       0.0              0.0             0.0                0.0  ...   \n","2   0.0       0.0              0.0             0.0                0.0  ...   \n","3   0.0       0.0              0.0             0.0                0.0  ...   \n","4   0.0       0.0              0.0             0.0                0.0  ...   \n","5   0.0       0.0              0.0             0.0                1.0  ...   \n","6   0.0       0.0              0.0             0.0                0.0  ...   \n","7   0.0       0.0              0.0             0.0                0.0  ...   \n","8   0.0       0.0              0.0             0.0                0.0  ...   \n","9   0.0       0.0              0.0             0.0                0.0  ...   \n","\n","   goitre  tumor  hypopituitary  psych    TSH  T3_measured  TT4_measured  \\\n","0     0.0    0.0            0.0    0.0   61.0       6.0000      23.00000   \n","1     0.0    0.0            0.0    0.0   29.0      15.0000      61.00000   \n","2     0.0    1.0            0.0    0.0   29.0      19.0000      58.00000   \n","3     0.0    0.0            0.0    0.0  114.0       3.0000      24.00000   \n","4     0.0    0.0            0.0    0.0   49.0       3.0000       5.00000   \n","5     0.0    0.0            0.0    0.0  197.0       0.0096       0.03121   \n","6     0.0    0.0            0.0    0.0  197.0       0.0096      14.00000   \n","7     0.0    0.0            0.0    0.0   96.0       4.0000       0.00290   \n","8     0.0    0.0            0.0    0.0  131.0       3.0000       0.00839   \n","9     0.0    0.0            0.0    0.0   85.0       6.0000      22.00000   \n","\n","   T4U_measured  FTI_measured  Outlier_label   \n","0         87.00      26.00000               o  \n","1         96.00      64.00000               o  \n","2        103.00      56.00000               o  \n","3         61.00      39.00000               o  \n","4        116.00       4.00000               o  \n","5        102.00       0.03042               o  \n","6         62.00      23.00000               o  \n","7          0.12       0.00240               o  \n","8        101.00       0.00829               o  \n","9        111.00       0.02000               o  \n","\n","[10 rows x 22 columns]"],"text/html":["\n","  <div id=\"df-45fee237-85db-4234-83f5-8c18da0b346e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>on_thyroxine</th>\n","      <th>query_on_thyroxine</th>\n","      <th>on_antithyroid_medication</th>\n","      <th>sick</th>\n","      <th>pregnant</th>\n","      <th>thyroid_surgery</th>\n","      <th>I131_treatment</th>\n","      <th>query_hypothyroid</th>\n","      <th>...</th>\n","      <th>goitre</th>\n","      <th>tumor</th>\n","      <th>hypopituitary</th>\n","      <th>psych</th>\n","      <th>TSH</th>\n","      <th>T3_measured</th>\n","      <th>TT4_measured</th>\n","      <th>T4U_measured</th>\n","      <th>FTI_measured</th>\n","      <th>Outlier_label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.45</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>61.0</td>\n","      <td>6.0000</td>\n","      <td>23.00000</td>\n","      <td>87.00</td>\n","      <td>26.00000</td>\n","      <td>o</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.61</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>29.0</td>\n","      <td>15.0000</td>\n","      <td>61.00000</td>\n","      <td>96.00</td>\n","      <td>64.00000</td>\n","      <td>o</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.16</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>29.0</td>\n","      <td>19.0000</td>\n","      <td>58.00000</td>\n","      <td>103.00</td>\n","      <td>56.00000</td>\n","      <td>o</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.85</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>114.0</td>\n","      <td>3.0000</td>\n","      <td>24.00000</td>\n","      <td>61.00</td>\n","      <td>39.00000</td>\n","      <td>o</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.75</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>49.0</td>\n","      <td>3.0000</td>\n","      <td>5.00000</td>\n","      <td>116.00</td>\n","      <td>4.00000</td>\n","      <td>o</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.85</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>197.0</td>\n","      <td>0.0096</td>\n","      <td>0.03121</td>\n","      <td>102.00</td>\n","      <td>0.03042</td>\n","      <td>o</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.85</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>197.0</td>\n","      <td>0.0096</td>\n","      <td>14.00000</td>\n","      <td>62.00</td>\n","      <td>23.00000</td>\n","      <td>o</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.49</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>96.0</td>\n","      <td>4.0000</td>\n","      <td>0.00290</td>\n","      <td>0.12</td>\n","      <td>0.00240</td>\n","      <td>o</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0.51</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>131.0</td>\n","      <td>3.0000</td>\n","      <td>0.00839</td>\n","      <td>101.00</td>\n","      <td>0.00829</td>\n","      <td>o</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.72</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>85.0</td>\n","      <td>6.0000</td>\n","      <td>22.00000</td>\n","      <td>111.00</td>\n","      <td>0.02000</td>\n","      <td>o</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10 rows Ã— 22 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-45fee237-85db-4234-83f5-8c18da0b346e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-45fee237-85db-4234-83f5-8c18da0b346e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-45fee237-85db-4234-83f5-8c18da0b346e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-3098e425-30c0-4e8a-a2d8-cc0f845627a1\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3098e425-30c0-4e8a-a2d8-cc0f845627a1')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-3098e425-30c0-4e8a-a2d8-cc0f845627a1 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["df_reduced = df.sample(frac=1, random_state=42)\n","\n","print(df_reduced.shape)"],"metadata":{"id":"CC-TfI_I-fA4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1761920232803,"user_tz":-480,"elapsed":27,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"626aaf04-9d9c-4a18-b27a-760c32464caf"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["(6916, 22)\n"]}]},{"cell_type":"code","source":["df_reduced[target] = df_reduced[target].apply(lambda x: 1 if x == 'o' else 0)"],"metadata":{"id":"BvmJ6uYb8Wwf","executionInfo":{"status":"ok","timestamp":1761920237918,"user_tz":-480,"elapsed":42,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["df_reduced.head(1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":110},"id":"aUXllETT9AY3","executionInfo":{"status":"ok","timestamp":1761920240265,"user_tz":-480,"elapsed":79,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"fb7cd650-a9c5-43ee-dd5b-9e63aaf329e8"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Age  Sex  on_thyroxine  query_on_thyroxine  on_antithyroid_medication  \\\n","6007  0.61  0.0           0.0                 0.0                        0.0   \n","\n","      sick  pregnant  thyroid_surgery  I131_treatment  query_hypothyroid  ...  \\\n","6007   0.0       0.0              0.0             0.0                0.0  ...   \n","\n","      goitre  tumor  hypopituitary  psych      TSH  T3_measured  TT4_measured  \\\n","6007     0.0    0.0            0.0    0.0  0.00063         18.0          0.12   \n","\n","      T4U_measured  FTI_measured  Outlier_label   \n","6007          91.0         132.0               0  \n","\n","[1 rows x 22 columns]"],"text/html":["\n","  <div id=\"df-e97bbf62-5e7d-4830-a110-cdfd22f0a315\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>on_thyroxine</th>\n","      <th>query_on_thyroxine</th>\n","      <th>on_antithyroid_medication</th>\n","      <th>sick</th>\n","      <th>pregnant</th>\n","      <th>thyroid_surgery</th>\n","      <th>I131_treatment</th>\n","      <th>query_hypothyroid</th>\n","      <th>...</th>\n","      <th>goitre</th>\n","      <th>tumor</th>\n","      <th>hypopituitary</th>\n","      <th>psych</th>\n","      <th>TSH</th>\n","      <th>T3_measured</th>\n","      <th>TT4_measured</th>\n","      <th>T4U_measured</th>\n","      <th>FTI_measured</th>\n","      <th>Outlier_label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>6007</th>\n","      <td>0.61</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.00063</td>\n","      <td>18.0</td>\n","      <td>0.12</td>\n","      <td>91.0</td>\n","      <td>132.0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1 rows Ã— 22 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e97bbf62-5e7d-4830-a110-cdfd22f0a315')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e97bbf62-5e7d-4830-a110-cdfd22f0a315 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e97bbf62-5e7d-4830-a110-cdfd22f0a315');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_reduced"}},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["anom_count = (df_reduced[target] == 1).sum()\n","normal_count = (df_reduced[target] == 0).sum()\n","\n","print(\"Number of anomalies:\", anom_count)\n","print(\"Number of normals:\", normal_count)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K49SKuZM9TLE","executionInfo":{"status":"ok","timestamp":1761920243742,"user_tz":-480,"elapsed":21,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"80ada587-ef48-4ff4-da70-1fc9e48339e4"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of anomalies: 250\n","Number of normals: 6666\n"]}]},{"cell_type":"code","source":["#Proportion of attacks in network traffic\n","plt.figure(figsize = (10, 6))\n","target_count = df_reduced[target].value_counts()\n","plt.figure(figsize = (12, 8))\n","plt.pie(target_count, labels = ['No', 'Yes'], autopct=\"%0.1f%%\")\n","plt.title('Is Anomaly')\n","plt.show()\n","#Conclusion: Imbalanced dataset"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":692},"id":"mAR8IJqP9xad","executionInfo":{"status":"ok","timestamp":1761920246887,"user_tz":-480,"elapsed":243,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"edc8ed83-3504-4f6c-ec9a-2af9320cb635"},"execution_count":40,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 0 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# See how many missing values per column\n","df_reduced.isna().sum()\n","\n","# Or total missing values in the entire dataframe\n","total_nans = df_reduced.isna().sum().sum()\n","print(f\"Total NaN values: {total_nans:,}\")\n","\n","# To quickly view which columns have missing data\n","nan_cols = df_reduced.columns[df.isna().any()].tolist()\n","print(\"Columns with NaNs:\", nan_cols)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VzILo0ql94iV","executionInfo":{"status":"ok","timestamp":1761920249910,"user_tz":-480,"elapsed":18,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"84215274-7da9-428d-8759-f8c0c5dd16b2"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["Total NaN values: 0\n","Columns with NaNs: []\n"]}]},{"cell_type":"code","source":["# Check if there are any infinite values\n","inf_mask = df.isin([np.inf, -np.inf])\n","has_inf = inf_mask.any().any()\n","print(f\"Contains infinite values: {has_inf}\")\n","\n","# Count how many per column\n","inf_counts = inf_mask.sum()\n","inf_counts[inf_counts > 0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":102},"id":"mL2OpojD-Ok2","executionInfo":{"status":"ok","timestamp":1761920252891,"user_tz":-480,"elapsed":54,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"be541999-d55e-4e0c-af96-dea05932ffc6"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["Contains infinite values: False\n"]},{"output_type":"execute_result","data":{"text/plain":["Series([], dtype: int64)"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["# Separate features and label\n","X = df_reduced.drop(columns=[target])\n","y = df_reduced[target]"],"metadata":{"id":"nXujoR8O-QJk","executionInfo":{"status":"ok","timestamp":1761920255292,"user_tz":-480,"elapsed":9,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["X_train, X_temp, y_train, y_temp = train_test_split(\n","    X, y, test_size=0.3, stratify=y, random_state=42\n",")\n","\n","# Split temp into validation (15%) and test (15%)\n","X_val, X_test, y_val, y_test = train_test_split(\n","    X_temp, y_temp, test_size=0.5, stratify=y_temp, random_state=42\n",")"],"metadata":{"id":"0CTOM8Y2-dt_","executionInfo":{"status":"ok","timestamp":1761920257575,"user_tz":-480,"elapsed":15,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}}},"execution_count":44,"outputs":[]},{"cell_type":"code","source":["num_cols = X_train.select_dtypes(include=[np.number]).columns\n","\n","scaler = StandardScaler()\n","\n","X_train[num_cols] = scaler.fit_transform(X_train[num_cols])\n","X_val[num_cols] = scaler.transform(X_val[num_cols])\n","X_test[num_cols] = scaler.transform(X_test[num_cols])"],"metadata":{"id":"fuXI-luj-h90","executionInfo":{"status":"ok","timestamp":1761920262183,"user_tz":-480,"elapsed":11,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["train_df = pd.concat([X_train, y_train], axis=1)\n","valid_df = pd.concat([X_val, y_val], axis=1)\n","test_df = pd.concat([X_test, y_test], axis=1)"],"metadata":{"id":"tgCe630L-j2Y","executionInfo":{"status":"ok","timestamp":1761920265418,"user_tz":-480,"elapsed":26,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}}},"execution_count":46,"outputs":[]},{"cell_type":"code","source":["print(f\"Train shape: {train_df.shape}, anomaly ratio={train_df[target].mean():.4%}\")\n","print(f\"Valid shape: {valid_df.shape}, anomaly ratio={valid_df[target].mean():.4%}\")\n","print(f\"Test shape:  {test_df.shape},  anomaly ratio={test_df[target].mean():.4%}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XOSf-jYv-lYE","executionInfo":{"status":"ok","timestamp":1761920272234,"user_tz":-480,"elapsed":51,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"614d6cac-51d2-43ce-8a7f-355630208d39"},"execution_count":47,"outputs":[{"output_type":"stream","name":"stdout","text":["Train shape: (4841, 22), anomaly ratio=3.6150%\n","Valid shape: (1037, 22), anomaly ratio=3.5680%\n","Test shape:  (1038, 22),  anomaly ratio=3.6609%\n"]}]},{"cell_type":"code","source":["import os\n","\n","# Create the folder path (it won't exist by default)\n","save_dir = \"/content/drive/MyDrive/datasets/thyroid\"\n","\n","# Make sure the directory exists\n","os.makedirs(save_dir, exist_ok=True)\n","\n","# Now safely save your splits\n","train_df.to_csv(f\"{save_dir}/train.csv\", index=False)\n","valid_df.to_csv(f\"{save_dir}/val.csv\", index=False)\n","test_df.to_csv(f\"{save_dir}/test.csv\", index=False)\n","\n","print(\"Files saved in:\", save_dir)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Wk-lEVBa-m8a","executionInfo":{"status":"ok","timestamp":1761920281714,"user_tz":-480,"elapsed":332,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"943c1163-49cd-406a-df13-8091ce5fe898"},"execution_count":48,"outputs":[{"output_type":"stream","name":"stdout","text":["Files saved in: /content/drive/MyDrive/datasets/thyroid\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"48DsXCuc-rQB"},"execution_count":null,"outputs":[]}]}