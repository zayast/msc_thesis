{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyM2RdjOcMTVyaKgJwodS/y1"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"u82pkANv6KzH","executionInfo":{"status":"ok","timestamp":1759370598901,"user_tz":-480,"elapsed":10357,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}}},"outputs":[],"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import numpy as np"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EBT1DPPD7aq-","executionInfo":{"status":"ok","timestamp":1759370618980,"user_tz":-480,"elapsed":18172,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"3310a232-c956-4bcd-d7bc-adca2e8f8d61"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["dt_path = '/content/drive/MyDrive/wustl_iiot_2021.csv'\n","\n","df = pd.read_csv(dt_path)"],"metadata":{"id":"Rvw2l1y67e5q","executionInfo":{"status":"ok","timestamp":1759370635331,"user_tz":-480,"elapsed":14084,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":429},"id":"_yQWSQAF8oZc","executionInfo":{"status":"ok","timestamp":1759370635402,"user_tz":-480,"elapsed":61,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"c07c80c9-2320-4f4b-f9ca-ae78ad3136fd"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             StartTime             LastTime         SrcAddr      DstAddr  \\\n","0  2019-08-19 12:23:28  2019-08-19 12:23:28    192.168.0.20  192.168.0.2   \n","1  2019-08-19 15:13:24  2019-08-19 15:13:24    192.168.0.20  192.168.0.2   \n","2  2019-08-19 13:41:31  2019-08-19 13:41:31    192.168.0.20  192.168.0.2   \n","3  2019-08-19 12:43:19  2019-08-19 12:43:20  209.240.235.92  192.168.0.2   \n","4  2019-08-19 14:49:44  2019-08-19 14:49:48    192.168.0.20  192.168.0.1   \n","\n","   Mean  Sport  Dport  SrcPkts  DstPkts  TotPkts  ...  SAppBytes  DAppBytes  \\\n","0     0  59034    502       10        8       18  ...         24         20   \n","1     0  55841    502       10        8       18  ...         24         20   \n","2     0  63774    502       10        8       18  ...         24         20   \n","3     0  61771     80        4        0        4  ...          0          0   \n","4     3      0      0       14        0       14  ...        476          0   \n","\n","   TotAppByte    SynAck   RunTime  sTos   SrcJitAct  DstJitAct  Traffic  \\\n","0          44  0.001176  0.053037     0    0.000000        0.0   normal   \n","1          44  0.001308  0.052681     0    0.000000        0.0   normal   \n","2          44  0.000690  0.051793     0    0.000000        0.0   normal   \n","3           0  0.000000  0.889555     0  419.338813        0.0      DoS   \n","4         476  0.000000  3.500055     0  525.146562        0.0   normal   \n","\n","   Target  \n","0       0  \n","1       0  \n","2       0  \n","3       1  \n","4       0  \n","\n","[5 rows x 49 columns]"],"text/html":["\n","  <div id=\"df-4de7b003-8fa1-4ecb-ba5a-6bfa4596763d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>StartTime</th>\n","      <th>LastTime</th>\n","      <th>SrcAddr</th>\n","      <th>DstAddr</th>\n","      <th>Mean</th>\n","      <th>Sport</th>\n","      <th>Dport</th>\n","      <th>SrcPkts</th>\n","      <th>DstPkts</th>\n","      <th>TotPkts</th>\n","      <th>...</th>\n","      <th>SAppBytes</th>\n","      <th>DAppBytes</th>\n","      <th>TotAppByte</th>\n","      <th>SynAck</th>\n","      <th>RunTime</th>\n","      <th>sTos</th>\n","      <th>SrcJitAct</th>\n","      <th>DstJitAct</th>\n","      <th>Traffic</th>\n","      <th>Target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2019-08-19 12:23:28</td>\n","      <td>2019-08-19 12:23:28</td>\n","      <td>192.168.0.20</td>\n","      <td>192.168.0.2</td>\n","      <td>0</td>\n","      <td>59034</td>\n","      <td>502</td>\n","      <td>10</td>\n","      <td>8</td>\n","      <td>18</td>\n","      <td>...</td>\n","      <td>24</td>\n","      <td>20</td>\n","      <td>44</td>\n","      <td>0.001176</td>\n","      <td>0.053037</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>normal</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2019-08-19 15:13:24</td>\n","      <td>2019-08-19 15:13:24</td>\n","      <td>192.168.0.20</td>\n","      <td>192.168.0.2</td>\n","      <td>0</td>\n","      <td>55841</td>\n","      <td>502</td>\n","      <td>10</td>\n","      <td>8</td>\n","      <td>18</td>\n","      <td>...</td>\n","      <td>24</td>\n","      <td>20</td>\n","      <td>44</td>\n","      <td>0.001308</td>\n","      <td>0.052681</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>normal</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2019-08-19 13:41:31</td>\n","      <td>2019-08-19 13:41:31</td>\n","      <td>192.168.0.20</td>\n","      <td>192.168.0.2</td>\n","      <td>0</td>\n","      <td>63774</td>\n","      <td>502</td>\n","      <td>10</td>\n","      <td>8</td>\n","      <td>18</td>\n","      <td>...</td>\n","      <td>24</td>\n","      <td>20</td>\n","      <td>44</td>\n","      <td>0.000690</td>\n","      <td>0.051793</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>normal</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2019-08-19 12:43:19</td>\n","      <td>2019-08-19 12:43:20</td>\n","      <td>209.240.235.92</td>\n","      <td>192.168.0.2</td>\n","      <td>0</td>\n","      <td>61771</td>\n","      <td>80</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.889555</td>\n","      <td>0</td>\n","      <td>419.338813</td>\n","      <td>0.0</td>\n","      <td>DoS</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2019-08-19 14:49:44</td>\n","      <td>2019-08-19 14:49:48</td>\n","      <td>192.168.0.20</td>\n","      <td>192.168.0.1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>14</td>\n","      <td>0</td>\n","      <td>14</td>\n","      <td>...</td>\n","      <td>476</td>\n","      <td>0</td>\n","      <td>476</td>\n","      <td>0.000000</td>\n","      <td>3.500055</td>\n","      <td>0</td>\n","      <td>525.146562</td>\n","      <td>0.0</td>\n","      <td>normal</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 49 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4de7b003-8fa1-4ecb-ba5a-6bfa4596763d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4de7b003-8fa1-4ecb-ba5a-6bfa4596763d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4de7b003-8fa1-4ecb-ba5a-6bfa4596763d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-08897d57-2c61-4b85-9961-4aca94f7a834\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-08897d57-2c61-4b85-9961-4aca94f7a834')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-08897d57-2c61-4b85-9961-4aca94f7a834 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":[],"metadata":{"id":"x5sTJhcg9dCa"}},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RU8J8-fh8tyh","executionInfo":{"status":"ok","timestamp":1759370641260,"user_tz":-480,"elapsed":417,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"7b2a0b1a-b4f1-44dd-c8d0-aa651a54c592"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1194464 entries, 0 to 1194463\n","Data columns (total 49 columns):\n"," #   Column      Non-Null Count    Dtype  \n","---  ------      --------------    -----  \n"," 0   StartTime   1194464 non-null  object \n"," 1   LastTime    1194464 non-null  object \n"," 2   SrcAddr     1194464 non-null  object \n"," 3   DstAddr     1194464 non-null  object \n"," 4   Mean        1194464 non-null  int64  \n"," 5   Sport       1194464 non-null  int64  \n"," 6   Dport       1194464 non-null  int64  \n"," 7   SrcPkts     1194464 non-null  int64  \n"," 8   DstPkts     1194464 non-null  int64  \n"," 9   TotPkts     1194464 non-null  int64  \n"," 10  DstBytes    1194464 non-null  int64  \n"," 11  SrcBytes    1194464 non-null  int64  \n"," 12  TotBytes    1194464 non-null  int64  \n"," 13  SrcLoad     1194464 non-null  float64\n"," 14  DstLoad     1194464 non-null  float64\n"," 15  Load        1194464 non-null  float64\n"," 16  SrcRate     1194464 non-null  float64\n"," 17  DstRate     1194464 non-null  float64\n"," 18  Rate        1194464 non-null  float64\n"," 19  SrcLoss     1194464 non-null  int64  \n"," 20  DstLoss     1194464 non-null  int64  \n"," 21  Loss        1194464 non-null  int64  \n"," 22  pLoss       1194464 non-null  float64\n"," 23  SrcJitter   1194464 non-null  float64\n"," 24  DstJitter   1194464 non-null  float64\n"," 25  SIntPkt     1194464 non-null  float64\n"," 26  DIntPkt     1194464 non-null  float64\n"," 27  Proto       1194464 non-null  int64  \n"," 28  Dur         1194464 non-null  float64\n"," 29  TcpRtt      1194464 non-null  float64\n"," 30  IdleTime    1194464 non-null  int64  \n"," 31  Sum         1194464 non-null  float64\n"," 32  Min         1194464 non-null  float64\n"," 33  Max         1194464 non-null  float64\n"," 34  sDSb        1194464 non-null  int64  \n"," 35  sTtl        1194464 non-null  int64  \n"," 36  dTtl        1194464 non-null  int64  \n"," 37  sIpId       1194464 non-null  int64  \n"," 38  dIpId       1194464 non-null  int64  \n"," 39  SAppBytes   1194464 non-null  int64  \n"," 40  DAppBytes   1194464 non-null  int64  \n"," 41  TotAppByte  1194464 non-null  int64  \n"," 42  SynAck      1194464 non-null  float64\n"," 43  RunTime     1194464 non-null  float64\n"," 44  sTos        1194464 non-null  int64  \n"," 45  SrcJitAct   1194464 non-null  float64\n"," 46  DstJitAct   1194464 non-null  float64\n"," 47  Traffic     1194464 non-null  object \n"," 48  Target      1194464 non-null  int64  \n","dtypes: float64(20), int64(24), object(5)\n","memory usage: 446.5+ MB\n"]}]},{"cell_type":"code","source":["df.select_dtypes(include = ['object']).nunique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"id":"wAxWywYys-0_","executionInfo":{"status":"ok","timestamp":1759370645990,"user_tz":-480,"elapsed":618,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"2b4baec5-ff81-4b06-ca14-e926130d133b"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["StartTime    25267\n","LastTime     25276\n","SrcAddr         14\n","DstAddr        132\n","Traffic          5\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>StartTime</th>\n","      <td>25267</td>\n","    </tr>\n","    <tr>\n","      <th>LastTime</th>\n","      <td>25276</td>\n","    </tr>\n","    <tr>\n","      <th>SrcAddr</th>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>DstAddr</th>\n","      <td>132</td>\n","    </tr>\n","    <tr>\n","      <th>Traffic</th>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":350},"id":"dy7YAwuX8yh1","executionInfo":{"status":"ok","timestamp":1759370651426,"user_tz":-480,"elapsed":1981,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"2402c592-616f-45e3-f06d-f719bd45f05e"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               Mean         Sport         Dport       SrcPkts       DstPkts  \\\n","count  1.194464e+06  1.194464e+06  1.194464e+06  1.194464e+06  1.194464e+06   \n","mean   1.286870e-01  5.445253e+04  7.907604e+02  1.665579e+02  1.688389e+01   \n","std    6.859156e-01  1.200834e+04  3.299492e+03  5.266192e+04  1.137763e+03   \n","min    0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   \n","25%    0.000000e+00  5.221800e+04  5.020000e+02  1.000000e+01  8.000000e+00   \n","50%    0.000000e+00  5.663500e+04  5.020000e+02  1.000000e+01  8.000000e+00   \n","75%    0.000000e+00  6.104300e+04  5.020000e+02  1.000000e+01  8.000000e+00   \n","max    5.000000e+00  2.765721e+06  6.552200e+04  2.773967e+07  3.092160e+05   \n","\n","            TotPkts      DstBytes      SrcBytes      TotBytes       SrcLoad  \\\n","count  1.194464e+06  1.194464e+06  1.194464e+06  1.194464e+06  1.194464e+06   \n","mean   1.756631e+02  7.601579e+03  1.938043e+04  2.779692e+05  1.571207e+07   \n","std    5.266221e+04  7.508699e+05  4.730229e+06  1.918939e+07  8.339078e+07   \n","min    0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   \n","25%    1.800000e+01  5.080000e+02  6.440000e+02  1.152000e+03  8.514543e+04   \n","50%    1.800000e+01  5.080000e+02  6.440000e+02  1.152000e+03  8.818777e+04   \n","75%    1.800000e+01  5.080000e+02  6.440000e+02  1.152000e+03  8.968784e+04   \n","max    2.773967e+07  8.251559e+07  2.108646e+09  2.143725e+09  1.156000e+09   \n","\n","       ...         dIpId     SAppBytes     DAppBytes    TotAppByte  \\\n","count  ...  1.194464e+06  1.194464e+06  1.194464e+06  1.194464e+06   \n","mean   ...  2.956785e+04  2.192527e+02  7.051507e+03  6.581117e+05   \n","std    ...  2.027684e+04  2.852114e+03  7.445876e+05  4.167380e+07   \n","min    ...  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   \n","25%    ...  1.117100e+04  2.400000e+01  2.000000e+01  4.400000e+01   \n","50%    ...  2.934000e+04  2.400000e+01  2.000000e+01  4.400000e+01   \n","75%    ...  4.686000e+04  2.400000e+01  2.000000e+01  4.400000e+01   \n","max    ...  6.553500e+04  9.979300e+04  8.182314e+07  4.293700e+09   \n","\n","             SynAck       RunTime          sTos     SrcJitAct     DstJitAct  \\\n","count  1.194464e+06  1.194464e+06  1.194464e+06  1.194464e+06  1.194464e+06   \n","mean   1.801930e-03  1.994698e-01  7.531412e-03  6.189383e+01  2.653724e-01   \n","std    5.485539e-02  7.966451e-01  7.442284e-01  4.143742e+02  5.001929e+00   \n","min    0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   \n","25%    6.310000e-04  5.134900e-02  0.000000e+00  0.000000e+00  0.000000e+00   \n","50%    6.750000e-04  5.206700e-02  0.000000e+00  0.000000e+00  0.000000e+00   \n","75%    8.020000e-04  5.324900e-02  0.000000e+00  0.000000e+00  0.000000e+00   \n","max    3.036730e+00  5.103213e+00  2.070000e+02  4.999440e+03  7.695150e+02   \n","\n","             Target  \n","count  1.194464e+06  \n","mean   7.284941e-02  \n","std    2.598893e-01  \n","min    0.000000e+00  \n","25%    0.000000e+00  \n","50%    0.000000e+00  \n","75%    0.000000e+00  \n","max    1.000000e+00  \n","\n","[8 rows x 44 columns]"],"text/html":["\n","  <div id=\"df-1481f6b0-47c3-407f-a8da-5c4ade48875f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Mean</th>\n","      <th>Sport</th>\n","      <th>Dport</th>\n","      <th>SrcPkts</th>\n","      <th>DstPkts</th>\n","      <th>TotPkts</th>\n","      <th>DstBytes</th>\n","      <th>SrcBytes</th>\n","      <th>TotBytes</th>\n","      <th>SrcLoad</th>\n","      <th>...</th>\n","      <th>dIpId</th>\n","      <th>SAppBytes</th>\n","      <th>DAppBytes</th>\n","      <th>TotAppByte</th>\n","      <th>SynAck</th>\n","      <th>RunTime</th>\n","      <th>sTos</th>\n","      <th>SrcJitAct</th>\n","      <th>DstJitAct</th>\n","      <th>Target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1.194464e+06</td>\n","      <td>1.194464e+06</td>\n","      <td>1.194464e+06</td>\n","      <td>1.194464e+06</td>\n","      <td>1.194464e+06</td>\n","      <td>1.194464e+06</td>\n","      <td>1.194464e+06</td>\n","      <td>1.194464e+06</td>\n","      <td>1.194464e+06</td>\n","      <td>1.194464e+06</td>\n","      <td>...</td>\n","      <td>1.194464e+06</td>\n","      <td>1.194464e+06</td>\n","      <td>1.194464e+06</td>\n","      <td>1.194464e+06</td>\n","      <td>1.194464e+06</td>\n","      <td>1.194464e+06</td>\n","      <td>1.194464e+06</td>\n","      <td>1.194464e+06</td>\n","      <td>1.194464e+06</td>\n","      <td>1.194464e+06</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1.286870e-01</td>\n","      <td>5.445253e+04</td>\n","      <td>7.907604e+02</td>\n","      <td>1.665579e+02</td>\n","      <td>1.688389e+01</td>\n","      <td>1.756631e+02</td>\n","      <td>7.601579e+03</td>\n","      <td>1.938043e+04</td>\n","      <td>2.779692e+05</td>\n","      <td>1.571207e+07</td>\n","      <td>...</td>\n","      <td>2.956785e+04</td>\n","      <td>2.192527e+02</td>\n","      <td>7.051507e+03</td>\n","      <td>6.581117e+05</td>\n","      <td>1.801930e-03</td>\n","      <td>1.994698e-01</td>\n","      <td>7.531412e-03</td>\n","      <td>6.189383e+01</td>\n","      <td>2.653724e-01</td>\n","      <td>7.284941e-02</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>6.859156e-01</td>\n","      <td>1.200834e+04</td>\n","      <td>3.299492e+03</td>\n","      <td>5.266192e+04</td>\n","      <td>1.137763e+03</td>\n","      <td>5.266221e+04</td>\n","      <td>7.508699e+05</td>\n","      <td>4.730229e+06</td>\n","      <td>1.918939e+07</td>\n","      <td>8.339078e+07</td>\n","      <td>...</td>\n","      <td>2.027684e+04</td>\n","      <td>2.852114e+03</td>\n","      <td>7.445876e+05</td>\n","      <td>4.167380e+07</td>\n","      <td>5.485539e-02</td>\n","      <td>7.966451e-01</td>\n","      <td>7.442284e-01</td>\n","      <td>4.143742e+02</td>\n","      <td>5.001929e+00</td>\n","      <td>2.598893e-01</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000e+00</td>\n","      <td>5.221800e+04</td>\n","      <td>5.020000e+02</td>\n","      <td>1.000000e+01</td>\n","      <td>8.000000e+00</td>\n","      <td>1.800000e+01</td>\n","      <td>5.080000e+02</td>\n","      <td>6.440000e+02</td>\n","      <td>1.152000e+03</td>\n","      <td>8.514543e+04</td>\n","      <td>...</td>\n","      <td>1.117100e+04</td>\n","      <td>2.400000e+01</td>\n","      <td>2.000000e+01</td>\n","      <td>4.400000e+01</td>\n","      <td>6.310000e-04</td>\n","      <td>5.134900e-02</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.000000e+00</td>\n","      <td>5.663500e+04</td>\n","      <td>5.020000e+02</td>\n","      <td>1.000000e+01</td>\n","      <td>8.000000e+00</td>\n","      <td>1.800000e+01</td>\n","      <td>5.080000e+02</td>\n","      <td>6.440000e+02</td>\n","      <td>1.152000e+03</td>\n","      <td>8.818777e+04</td>\n","      <td>...</td>\n","      <td>2.934000e+04</td>\n","      <td>2.400000e+01</td>\n","      <td>2.000000e+01</td>\n","      <td>4.400000e+01</td>\n","      <td>6.750000e-04</td>\n","      <td>5.206700e-02</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>0.000000e+00</td>\n","      <td>6.104300e+04</td>\n","      <td>5.020000e+02</td>\n","      <td>1.000000e+01</td>\n","      <td>8.000000e+00</td>\n","      <td>1.800000e+01</td>\n","      <td>5.080000e+02</td>\n","      <td>6.440000e+02</td>\n","      <td>1.152000e+03</td>\n","      <td>8.968784e+04</td>\n","      <td>...</td>\n","      <td>4.686000e+04</td>\n","      <td>2.400000e+01</td>\n","      <td>2.000000e+01</td>\n","      <td>4.400000e+01</td>\n","      <td>8.020000e-04</td>\n","      <td>5.324900e-02</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>5.000000e+00</td>\n","      <td>2.765721e+06</td>\n","      <td>6.552200e+04</td>\n","      <td>2.773967e+07</td>\n","      <td>3.092160e+05</td>\n","      <td>2.773967e+07</td>\n","      <td>8.251559e+07</td>\n","      <td>2.108646e+09</td>\n","      <td>2.143725e+09</td>\n","      <td>1.156000e+09</td>\n","      <td>...</td>\n","      <td>6.553500e+04</td>\n","      <td>9.979300e+04</td>\n","      <td>8.182314e+07</td>\n","      <td>4.293700e+09</td>\n","      <td>3.036730e+00</td>\n","      <td>5.103213e+00</td>\n","      <td>2.070000e+02</td>\n","      <td>4.999440e+03</td>\n","      <td>7.695150e+02</td>\n","      <td>1.000000e+00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows Ã— 44 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1481f6b0-47c3-407f-a8da-5c4ade48875f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1481f6b0-47c3-407f-a8da-5c4ade48875f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1481f6b0-47c3-407f-a8da-5c4ade48875f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-901fcdbb-9780-4897-91cf-0f2cdabbee65\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-901fcdbb-9780-4897-91cf-0f2cdabbee65')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-901fcdbb-9780-4897-91cf-0f2cdabbee65 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X2Wzji2O86v4","executionInfo":{"status":"ok","timestamp":1759370653829,"user_tz":-480,"elapsed":5,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"d8799c29-8061-4085-9707-b18c656db3a5"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1194464, 49)"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["attack_count = (df['Target'] == 1).sum()\n","normal_count = (df['Target'] == 0).sum()\n","\n","print(\"Number of attacks in network trafic:\", attack_count)\n","print(\"Number of normals in network trafic:\", normal_count)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kPP-BBFK8_2B","executionInfo":{"status":"ok","timestamp":1759370657320,"user_tz":-480,"elapsed":8,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"44a3a650-8ec0-4290-a63c-8dced438af41"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of attacks in network trafic: 87016\n","Number of normals in network trafic: 1107448\n"]}]},{"cell_type":"code","source":["#Proportion of attacks in network traffic\n","plt.figure(figsize = (10, 6))\n","is_attack_count = df['Target'].value_counts()\n","plt.figure(figsize = (12, 8))\n","plt.pie(is_attack_count, labels = ['No', 'Yes'], autopct=\"%0.1f%%\")\n","plt.title('Is Attack')\n","plt.show()\n","#Conclusion: Imbalanced dataset"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":692},"id":"zu1yBGXI9ahP","executionInfo":{"status":"ok","timestamp":1759370660421,"user_tz":-480,"elapsed":491,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"51222953-7be3-4031-893c-0a3512777c83"},"execution_count":10,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 0 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Show first 10 attacks\n","df[df['Target'] == 1].head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":760},"id":"iOwyhBdD92kp","executionInfo":{"status":"ok","timestamp":1759370663320,"user_tz":-480,"elapsed":149,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"bc0a6ca8-0db9-4300-e53e-418ff6aeadec"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              StartTime             LastTime         SrcAddr       DstAddr  \\\n","3   2019-08-19 12:43:19  2019-08-19 12:43:20  209.240.235.92   192.168.0.2   \n","5   2019-08-19 13:06:07  2019-08-19 13:06:07  209.240.235.92   192.168.0.2   \n","7   2019-08-19 12:38:24  2019-08-19 12:38:24    49.48.134.64   192.168.0.2   \n","13  2019-08-19 12:25:37  2019-08-19 12:25:42    192.168.0.10  192.168.0.20   \n","25  2019-08-19 12:32:51  2019-08-19 12:32:54    192.168.0.10   192.168.0.2   \n","33  2019-08-19 12:57:07  2019-08-19 12:57:08  209.240.235.92   192.168.0.2   \n","76  2019-08-19 12:57:19  2019-08-19 12:57:19  209.240.235.92   192.168.0.2   \n","79  2019-08-19 11:20:33  2019-08-19 11:20:33    192.168.0.10  192.168.0.20   \n","83  2019-08-19 12:32:35  2019-08-19 12:32:37    192.168.0.10   192.168.0.2   \n","86  2019-08-19 13:00:40  2019-08-19 13:00:40  209.240.235.92   192.168.0.2   \n","\n","    Mean  Sport  Dport  SrcPkts  DstPkts  TotPkts  ...  SAppBytes  DAppBytes  \\\n","3      0  61771     80        4        0        4  ...          0          0   \n","5      0  20559     80        2        0        2  ...          0          0   \n","7      0  42211     80        2        0        2  ...          0          0   \n","13     4  17810    502       76        0       76  ...       2432          0   \n","25     2  31188    502       45        0       45  ...       1440          0   \n","33     0  13204     80        4        0        4  ...          0          0   \n","76     0  28372     80        2        0        2  ...          0          0   \n","79     0  57934  15110        2        0        2  ...          0          0   \n","83     2  22877    502       38        0       38  ...       1216          0   \n","86     0  17638     80        2        0        2  ...          0          0   \n","\n","    TotAppByte  SynAck   RunTime  sTos    SrcJitAct  DstJitAct  Traffic  \\\n","3            0     0.0  0.889555     0   419.338813        0.0      DoS   \n","5            0     0.0  0.000000     0     0.000000        0.0      DoS   \n","7            0     0.0  0.000002     0     0.000000        0.0      DoS   \n","13        2432     0.0  4.896652     0   138.621609        0.0      DoS   \n","25        1440     0.0  2.899821     0    91.813289        0.0      DoS   \n","33           0     0.0  0.902385     0   425.386969        0.0      DoS   \n","76           0     0.0  0.000001     0  4028.726000        0.0      DoS   \n","79           0     0.0  0.000008     0     0.000000        0.0   Reconn   \n","83        1216     0.0  2.625278     0   103.993250        0.0      DoS   \n","86           0     0.0  0.000000     0     0.000000        0.0      DoS   \n","\n","    Target  \n","3        1  \n","5        1  \n","7        1  \n","13       1  \n","25       1  \n","33       1  \n","76       1  \n","79       1  \n","83       1  \n","86       1  \n","\n","[10 rows x 49 columns]"],"text/html":["\n","  <div id=\"df-cb6113b9-3826-4373-a115-1eb218cde8ca\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>StartTime</th>\n","      <th>LastTime</th>\n","      <th>SrcAddr</th>\n","      <th>DstAddr</th>\n","      <th>Mean</th>\n","      <th>Sport</th>\n","      <th>Dport</th>\n","      <th>SrcPkts</th>\n","      <th>DstPkts</th>\n","      <th>TotPkts</th>\n","      <th>...</th>\n","      <th>SAppBytes</th>\n","      <th>DAppBytes</th>\n","      <th>TotAppByte</th>\n","      <th>SynAck</th>\n","      <th>RunTime</th>\n","      <th>sTos</th>\n","      <th>SrcJitAct</th>\n","      <th>DstJitAct</th>\n","      <th>Traffic</th>\n","      <th>Target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3</th>\n","      <td>2019-08-19 12:43:19</td>\n","      <td>2019-08-19 12:43:20</td>\n","      <td>209.240.235.92</td>\n","      <td>192.168.0.2</td>\n","      <td>0</td>\n","      <td>61771</td>\n","      <td>80</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.889555</td>\n","      <td>0</td>\n","      <td>419.338813</td>\n","      <td>0.0</td>\n","      <td>DoS</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2019-08-19 13:06:07</td>\n","      <td>2019-08-19 13:06:07</td>\n","      <td>209.240.235.92</td>\n","      <td>192.168.0.2</td>\n","      <td>0</td>\n","      <td>20559</td>\n","      <td>80</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>DoS</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2019-08-19 12:38:24</td>\n","      <td>2019-08-19 12:38:24</td>\n","      <td>49.48.134.64</td>\n","      <td>192.168.0.2</td>\n","      <td>0</td>\n","      <td>42211</td>\n","      <td>80</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.000002</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>DoS</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>2019-08-19 12:25:37</td>\n","      <td>2019-08-19 12:25:42</td>\n","      <td>192.168.0.10</td>\n","      <td>192.168.0.20</td>\n","      <td>4</td>\n","      <td>17810</td>\n","      <td>502</td>\n","      <td>76</td>\n","      <td>0</td>\n","      <td>76</td>\n","      <td>...</td>\n","      <td>2432</td>\n","      <td>0</td>\n","      <td>2432</td>\n","      <td>0.0</td>\n","      <td>4.896652</td>\n","      <td>0</td>\n","      <td>138.621609</td>\n","      <td>0.0</td>\n","      <td>DoS</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>2019-08-19 12:32:51</td>\n","      <td>2019-08-19 12:32:54</td>\n","      <td>192.168.0.10</td>\n","      <td>192.168.0.2</td>\n","      <td>2</td>\n","      <td>31188</td>\n","      <td>502</td>\n","      <td>45</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>...</td>\n","      <td>1440</td>\n","      <td>0</td>\n","      <td>1440</td>\n","      <td>0.0</td>\n","      <td>2.899821</td>\n","      <td>0</td>\n","      <td>91.813289</td>\n","      <td>0.0</td>\n","      <td>DoS</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>2019-08-19 12:57:07</td>\n","      <td>2019-08-19 12:57:08</td>\n","      <td>209.240.235.92</td>\n","      <td>192.168.0.2</td>\n","      <td>0</td>\n","      <td>13204</td>\n","      <td>80</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.902385</td>\n","      <td>0</td>\n","      <td>425.386969</td>\n","      <td>0.0</td>\n","      <td>DoS</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>76</th>\n","      <td>2019-08-19 12:57:19</td>\n","      <td>2019-08-19 12:57:19</td>\n","      <td>209.240.235.92</td>\n","      <td>192.168.0.2</td>\n","      <td>0</td>\n","      <td>28372</td>\n","      <td>80</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.000001</td>\n","      <td>0</td>\n","      <td>4028.726000</td>\n","      <td>0.0</td>\n","      <td>DoS</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>79</th>\n","      <td>2019-08-19 11:20:33</td>\n","      <td>2019-08-19 11:20:33</td>\n","      <td>192.168.0.10</td>\n","      <td>192.168.0.20</td>\n","      <td>0</td>\n","      <td>57934</td>\n","      <td>15110</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.000008</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>Reconn</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>83</th>\n","      <td>2019-08-19 12:32:35</td>\n","      <td>2019-08-19 12:32:37</td>\n","      <td>192.168.0.10</td>\n","      <td>192.168.0.2</td>\n","      <td>2</td>\n","      <td>22877</td>\n","      <td>502</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>...</td>\n","      <td>1216</td>\n","      <td>0</td>\n","      <td>1216</td>\n","      <td>0.0</td>\n","      <td>2.625278</td>\n","      <td>0</td>\n","      <td>103.993250</td>\n","      <td>0.0</td>\n","      <td>DoS</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>86</th>\n","      <td>2019-08-19 13:00:40</td>\n","      <td>2019-08-19 13:00:40</td>\n","      <td>209.240.235.92</td>\n","      <td>192.168.0.2</td>\n","      <td>0</td>\n","      <td>17638</td>\n","      <td>80</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>DoS</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10 rows Ã— 49 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cb6113b9-3826-4373-a115-1eb218cde8ca')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cb6113b9-3826-4373-a115-1eb218cde8ca button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cb6113b9-3826-4373-a115-1eb218cde8ca');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-eca1af5c-465c-415d-9646-7a3504984f32\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eca1af5c-465c-415d-9646-7a3504984f32')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-eca1af5c-465c-415d-9646-7a3504984f32 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["df_reduced = df.sample(frac=0.1, random_state=42)\n","\n","print(df_reduced.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CC-TfI_I-fA4","executionInfo":{"status":"ok","timestamp":1759370719641,"user_tz":-480,"elapsed":17,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"ac055eae-6240-4449-e9b3-ae4b07dfb42d"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["(119446, 49)\n"]}]},{"cell_type":"code","source":["attack_count = (df_reduced['Target'] == 1).sum()\n","normal_count = (df_reduced['Target'] == 0).sum()\n","\n","print(\"Number of attacks in network trafic:\", attack_count)\n","print(\"Number of normals in network trafic:\", normal_count)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wbB4vRHQqo-k","executionInfo":{"status":"ok","timestamp":1759370757803,"user_tz":-480,"elapsed":6,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"a44ae2a1-5b7b-4558-9e62-c9318a09b630"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of attacks in network trafic: 8588\n","Number of normals in network trafic: 110858\n"]}]},{"cell_type":"code","source":["#Proportion of attacks in network traffic\n","plt.figure(figsize = (10, 6))\n","is_attack_count = df_reduced['Target'].value_counts()\n","plt.figure(figsize = (12, 8))\n","plt.pie(is_attack_count, labels = ['No', 'Yes'], autopct=\"%0.1f%%\")\n","plt.title('Is Attack')\n","plt.show()\n","#Conclusion: Imbalanced dataset"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":692},"id":"A6CFH6f5q0Oj","executionInfo":{"status":"ok","timestamp":1759370788644,"user_tz":-480,"elapsed":487,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"03c75128-3d73-4640-8c84-1a7093093508"},"execution_count":15,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 0 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"FK8EOBq4q7w6"},"execution_count":null,"outputs":[]}]}