{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNjl8apkVB4n1aZn3nZipFt"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"u82pkANv6KzH"},"outputs":[],"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import numpy as np\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EBT1DPPD7aq-","executionInfo":{"status":"ok","timestamp":1761911167186,"user_tz":-480,"elapsed":1962,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"7152f995-2192-4ee4-bcdb-c332d7e42012"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["!pip install wget"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-NGtB4U34akZ","executionInfo":{"status":"ok","timestamp":1761911174545,"user_tz":-480,"elapsed":3722,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"2755b9d6-3e0f-4ec2-a277-c280ba25e6c9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: wget in /usr/local/lib/python3.12/dist-packages (3.2)\n"]}]},{"cell_type":"code","source":["from pathlib import Path\n","import wget"],"metadata":{"id":"dtVkCJ8C30yp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Define dataset info\n","url = \"https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data\"\n","dataset_name = 'census-income'\n","\n","# Define output directory (use Path object)\n","dataset_dir = Path(\"/content/drive/MyDrive/datasets\")\n","out = dataset_dir / \"adult_income.csv\"\n","\n","# Make sure parent directory exists\n","out.parent.mkdir(parents=True, exist_ok=True)\n","\n","# Download file if not already present\n","if out.exists():\n","    print(\"✅ File already exists.\")\n","else:\n","    print(\"⬇️  Downloading file...\")\n","    wget.download(url, out.as_posix())\n","    print(\"\\n✅ Download complete!\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rEVEzZjU3IpP","executionInfo":{"status":"ok","timestamp":1761911179227,"user_tz":-480,"elapsed":48,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"88e65139-ea5d-4955-e99a-1770f6fdc717"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["✅ File already exists.\n"]}]},{"cell_type":"code","source":["columns = [\n","    \"age\", \"workclass\", \"fnlwgt\", \"education\", \"education_num\",\n","    \"marital_status\", \"occupation\", \"relationship\", \"race\", \"sex\",\n","    \"capital_gain\", \"capital_loss\", \"hours_per_week\", \"native_country\", \"income\"\n","]\n","\n","df = pd.read_csv(\n","    out,\n","    header=None,              # No header in file\n","    names=columns,            # Add our own headers\n","    na_values=\" ?\",           # Treat \" ?\" as missing\n","    skipinitialspace=True     # Trim spaces after commas\n",")\n"],"metadata":{"id":"Rvw2l1y67e5q"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"_yQWSQAF8oZc","executionInfo":{"status":"ok","timestamp":1761911185743,"user_tz":-480,"elapsed":112,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"7acd9bde-ed82-4562-cc9e-0d20d135a308"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age         workclass  fnlwgt  education  education_num  \\\n","0   39         State-gov   77516  Bachelors             13   \n","1   50  Self-emp-not-inc   83311  Bachelors             13   \n","2   38           Private  215646    HS-grad              9   \n","3   53           Private  234721       11th              7   \n","4   28           Private  338409  Bachelors             13   \n","\n","       marital_status         occupation   relationship   race     sex  \\\n","0       Never-married       Adm-clerical  Not-in-family  White    Male   \n","1  Married-civ-spouse    Exec-managerial        Husband  White    Male   \n","2            Divorced  Handlers-cleaners  Not-in-family  White    Male   \n","3  Married-civ-spouse  Handlers-cleaners        Husband  Black    Male   \n","4  Married-civ-spouse     Prof-specialty           Wife  Black  Female   \n","\n","   capital_gain  capital_loss  hours_per_week native_country income  \n","0          2174             0              40  United-States  <=50K  \n","1             0             0              13  United-States  <=50K  \n","2             0             0              40  United-States  <=50K  \n","3             0             0              40  United-States  <=50K  \n","4             0             0              40           Cuba  <=50K  "],"text/html":["\n","  <div id=\"df-e17db46b-baba-4a27-bd13-bc34ef22fa3e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>fnlwgt</th>\n","      <th>education</th>\n","      <th>education_num</th>\n","      <th>marital_status</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>sex</th>\n","      <th>capital_gain</th>\n","      <th>capital_loss</th>\n","      <th>hours_per_week</th>\n","      <th>native_country</th>\n","      <th>income</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>39</td>\n","      <td>State-gov</td>\n","      <td>77516</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Never-married</td>\n","      <td>Adm-clerical</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>2174</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>50</td>\n","      <td>Self-emp-not-inc</td>\n","      <td>83311</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>13</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>38</td>\n","      <td>Private</td>\n","      <td>215646</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Divorced</td>\n","      <td>Handlers-cleaners</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>53</td>\n","      <td>Private</td>\n","      <td>234721</td>\n","      <td>11th</td>\n","      <td>7</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Handlers-cleaners</td>\n","      <td>Husband</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>28</td>\n","      <td>Private</td>\n","      <td>338409</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Prof-specialty</td>\n","      <td>Wife</td>\n","      <td>Black</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>Cuba</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e17db46b-baba-4a27-bd13-bc34ef22fa3e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e17db46b-baba-4a27-bd13-bc34ef22fa3e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e17db46b-baba-4a27-bd13-bc34ef22fa3e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-c68b6531-6417-41e2-8abe-992300fe0fd5\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c68b6531-6417-41e2-8abe-992300fe0fd5')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-c68b6531-6417-41e2-8abe-992300fe0fd5 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 32561,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 17,\n        \"max\": 90,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          28,\n          73,\n          35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"workclass\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Without-pay\",\n          \"Self-emp-not-inc\",\n          \"?\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fnlwgt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 105549,\n        \"min\": 12285,\n        \"max\": 1484705,\n        \"num_unique_values\": 21648,\n        \"samples\": [\n          128485,\n          469907,\n          235951\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Bachelors\",\n          \"HS-grad\",\n          \"Some-college\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education_num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 16,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          13,\n          9,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marital_status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Never-married\",\n          \"Married-civ-spouse\",\n          \"Married-AF-spouse\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"occupation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"Machine-op-inspct\",\n          \"?\",\n          \"Adm-clerical\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"relationship\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Not-in-family\",\n          \"Husband\",\n          \"Other-relative\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"race\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Black\",\n          \"Other\",\n          \"Asian-Pac-Islander\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Female\",\n          \"Male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital_gain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7385,\n        \"min\": 0,\n        \"max\": 99999,\n        \"num_unique_values\": 119,\n        \"samples\": [\n          3781,\n          15831\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital_loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 402,\n        \"min\": 0,\n        \"max\": 4356,\n        \"num_unique_values\": 92,\n        \"samples\": [\n          419,\n          2051\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hours_per_week\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 1,\n        \"max\": 99,\n        \"num_unique_values\": 94,\n        \"samples\": [\n          6,\n          22\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"native_country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 42,\n        \"samples\": [\n          \"El-Salvador\",\n          \"Philippines\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \">50K\",\n          \"<=50K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":58}]},{"cell_type":"code","source":["drop_cols = [\"fnlwgt\", \"education_num\"]   #remove fnlwgt as a sampling weight, education_num encodes the same information education - numerically (1–16)\n","df = df.drop(columns=[c for c in drop_cols if c in df.columns])"],"metadata":{"id":"nB2NejN8F3fH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RU8J8-fh8tyh","executionInfo":{"status":"ok","timestamp":1761911402750,"user_tz":-480,"elapsed":199,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"9a1b7114-7fd8-4985-bfb5-840cd397ccda"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 32561 entries, 0 to 32560\n","Data columns (total 13 columns):\n"," #   Column          Non-Null Count  Dtype \n","---  ------          --------------  ----- \n"," 0   age             32561 non-null  int64 \n"," 1   workclass       32561 non-null  object\n"," 2   education       32561 non-null  object\n"," 3   marital_status  32561 non-null  object\n"," 4   occupation      32561 non-null  object\n"," 5   relationship    32561 non-null  object\n"," 6   race            32561 non-null  object\n"," 7   sex             32561 non-null  object\n"," 8   capital_gain    32561 non-null  int64 \n"," 9   capital_loss    32561 non-null  int64 \n"," 10  hours_per_week  32561 non-null  int64 \n"," 11  native_country  32561 non-null  object\n"," 12  income          32561 non-null  object\n","dtypes: int64(4), object(9)\n","memory usage: 3.2+ MB\n"]}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"dy7YAwuX8yh1","executionInfo":{"status":"ok","timestamp":1761911405235,"user_tz":-480,"elapsed":29,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"61d7ffa1-c258-48d9-eb79-f680ac2c12a0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                age  capital_gain  capital_loss  hours_per_week\n","count  32561.000000  32561.000000  32561.000000    32561.000000\n","mean      38.581647   1077.648844     87.303830       40.437456\n","std       13.640433   7385.292085    402.960219       12.347429\n","min       17.000000      0.000000      0.000000        1.000000\n","25%       28.000000      0.000000      0.000000       40.000000\n","50%       37.000000      0.000000      0.000000       40.000000\n","75%       48.000000      0.000000      0.000000       45.000000\n","max       90.000000  99999.000000   4356.000000       99.000000"],"text/html":["\n","  <div id=\"df-e5e6178b-948d-4b71-8ce1-25fd9d2cff2a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>capital_gain</th>\n","      <th>capital_loss</th>\n","      <th>hours_per_week</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>32561.000000</td>\n","      <td>32561.000000</td>\n","      <td>32561.000000</td>\n","      <td>32561.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>38.581647</td>\n","      <td>1077.648844</td>\n","      <td>87.303830</td>\n","      <td>40.437456</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>13.640433</td>\n","      <td>7385.292085</td>\n","      <td>402.960219</td>\n","      <td>12.347429</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>17.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>28.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>40.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>37.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>40.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>48.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>45.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>90.000000</td>\n","      <td>99999.000000</td>\n","      <td>4356.000000</td>\n","      <td>99.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e5e6178b-948d-4b71-8ce1-25fd9d2cff2a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e5e6178b-948d-4b71-8ce1-25fd9d2cff2a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e5e6178b-948d-4b71-8ce1-25fd9d2cff2a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-66700404-0abd-4ab7-8fcf-4c6ae2454565\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-66700404-0abd-4ab7-8fcf-4c6ae2454565')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-66700404-0abd-4ab7-8fcf-4c6ae2454565 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11498.327099385335,\n        \"min\": 13.640432553581146,\n        \"max\": 32561.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          38.58164675532078,\n          37.0,\n          32561.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital_gain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35111.6359522262,\n        \"min\": 0.0,\n        \"max\": 99999.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1077.6488437087312,\n          99999.0,\n          7385.292084839299\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital_loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11366.935322921163,\n        \"min\": 0.0,\n        \"max\": 32561.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          87.303829734959,\n          4356.0,\n          402.960218649059\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hours_per_week\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11498.057671750135,\n        \"min\": 1.0,\n        \"max\": 32561.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          32561.0,\n          40.437455852092995,\n          45.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X2Wzji2O86v4","executionInfo":{"status":"ok","timestamp":1761911409464,"user_tz":-480,"elapsed":31,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"a0dee861-b802-4b6f-bd84-0de74066137d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(32561, 13)"]},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["target = \"income\""],"metadata":{"id":"qtrpl6sE9YA8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["anomaly_count = (df[target] == '>50K').sum()\n","normal_count = (df[target] == '<=50K').sum()\n","\n","print(\"Number of anomaly:\", anomaly_count)\n","print(\"Number of normal:\", normal_count)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kPP-BBFK8_2B","executionInfo":{"status":"ok","timestamp":1761911413536,"user_tz":-480,"elapsed":15,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"fbef930f-eea4-45e9-e765-900220d7dce5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of anomaly: 7841\n","Number of normal: 24720\n"]}]},{"cell_type":"code","source":["plt.figure(figsize=(10, 8))\n","\n","is_anom_count = df[target].value_counts()\n","\n","plt.pie(is_anom_count, labels=['No', 'Yes'], autopct=\"%0.1f%%\")\n","plt.title('Is Anomaly')\n","plt.show()\n","#Imbalanced"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":675},"id":"zu1yBGXI9ahP","executionInfo":{"status":"ok","timestamp":1761911416045,"user_tz":-480,"elapsed":153,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"8ba9bc3b-55c7-4642-b904-1f70a11ce533"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Show first 10 anomalies\n","df[df[target] == '>50K'].head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"iOwyhBdD92kp","executionInfo":{"status":"ok","timestamp":1761911419274,"user_tz":-480,"elapsed":60,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"17397229-0225-4c2e-bc13-ae2979b231d1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    age         workclass     education      marital_status       occupation  \\\n","7    52  Self-emp-not-inc       HS-grad  Married-civ-spouse  Exec-managerial   \n","8    31           Private       Masters       Never-married   Prof-specialty   \n","9    42           Private     Bachelors  Married-civ-spouse  Exec-managerial   \n","10   37           Private  Some-college  Married-civ-spouse  Exec-managerial   \n","11   30         State-gov     Bachelors  Married-civ-spouse   Prof-specialty   \n","14   40           Private     Assoc-voc  Married-civ-spouse     Craft-repair   \n","19   43  Self-emp-not-inc       Masters            Divorced  Exec-managerial   \n","20   40           Private     Doctorate  Married-civ-spouse   Prof-specialty   \n","25   56         Local-gov     Bachelors  Married-civ-spouse     Tech-support   \n","27   54                 ?  Some-college  Married-civ-spouse                ?   \n","\n","     relationship                race     sex  capital_gain  capital_loss  \\\n","7         Husband               White    Male             0             0   \n","8   Not-in-family               White  Female         14084             0   \n","9         Husband               White    Male          5178             0   \n","10        Husband               Black    Male             0             0   \n","11        Husband  Asian-Pac-Islander    Male             0             0   \n","14        Husband  Asian-Pac-Islander    Male             0             0   \n","19      Unmarried               White  Female             0             0   \n","20        Husband               White    Male             0             0   \n","25        Husband               White    Male             0             0   \n","27        Husband  Asian-Pac-Islander    Male             0             0   \n","\n","    hours_per_week native_country income  \n","7               45  United-States   >50K  \n","8               50  United-States   >50K  \n","9               40  United-States   >50K  \n","10              80  United-States   >50K  \n","11              40          India   >50K  \n","14              40              ?   >50K  \n","19              45  United-States   >50K  \n","20              60  United-States   >50K  \n","25              40  United-States   >50K  \n","27              60          South   >50K  "],"text/html":["\n","  <div id=\"df-583457ac-8aae-4942-8011-5fdedb6da941\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>education</th>\n","      <th>marital_status</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>sex</th>\n","      <th>capital_gain</th>\n","      <th>capital_loss</th>\n","      <th>hours_per_week</th>\n","      <th>native_country</th>\n","      <th>income</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>7</th>\n","      <td>52</td>\n","      <td>Self-emp-not-inc</td>\n","      <td>HS-grad</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>United-States</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>31</td>\n","      <td>Private</td>\n","      <td>Masters</td>\n","      <td>Never-married</td>\n","      <td>Prof-specialty</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>14084</td>\n","      <td>0</td>\n","      <td>50</td>\n","      <td>United-States</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>42</td>\n","      <td>Private</td>\n","      <td>Bachelors</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>5178</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>37</td>\n","      <td>Private</td>\n","      <td>Some-college</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>Husband</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>80</td>\n","      <td>United-States</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>30</td>\n","      <td>State-gov</td>\n","      <td>Bachelors</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Prof-specialty</td>\n","      <td>Husband</td>\n","      <td>Asian-Pac-Islander</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>India</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>40</td>\n","      <td>Private</td>\n","      <td>Assoc-voc</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Craft-repair</td>\n","      <td>Husband</td>\n","      <td>Asian-Pac-Islander</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>?</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>43</td>\n","      <td>Self-emp-not-inc</td>\n","      <td>Masters</td>\n","      <td>Divorced</td>\n","      <td>Exec-managerial</td>\n","      <td>Unmarried</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>United-States</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>40</td>\n","      <td>Private</td>\n","      <td>Doctorate</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Prof-specialty</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>60</td>\n","      <td>United-States</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>56</td>\n","      <td>Local-gov</td>\n","      <td>Bachelors</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Tech-support</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>54</td>\n","      <td>?</td>\n","      <td>Some-college</td>\n","      <td>Married-civ-spouse</td>\n","      <td>?</td>\n","      <td>Husband</td>\n","      <td>Asian-Pac-Islander</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>60</td>\n","      <td>South</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-583457ac-8aae-4942-8011-5fdedb6da941')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-583457ac-8aae-4942-8011-5fdedb6da941 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-583457ac-8aae-4942-8011-5fdedb6da941');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-e86613e3-dbb3-4451-be6a-5db066f5ee42\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e86613e3-dbb3-4451-be6a-5db066f5ee42')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-e86613e3-dbb3-4451-be6a-5db066f5ee42 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df[df[target] == '>50K']\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 30,\n        \"max\": 56,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          56,\n          31,\n          40\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"workclass\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Private\",\n          \"?\",\n          \"State-gov\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"HS-grad\",\n          \"Masters\",\n          \"Doctorate\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marital_status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Married-civ-spouse\",\n          \"Never-married\",\n          \"Divorced\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"occupation\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Prof-specialty\",\n          \"?\",\n          \"Craft-repair\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"relationship\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Husband\",\n          \"Not-in-family\",\n          \"Unmarried\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"race\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"White\",\n          \"Black\",\n          \"Asian-Pac-Islander\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Female\",\n          \"Male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital_gain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4571,\n        \"min\": 0,\n        \"max\": 14084,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          14084\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital_loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hours_per_week\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 40,\n        \"max\": 80,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          50\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"native_country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"India\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \">50K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["df_reduced = df.sample(frac=1, random_state=42)\n","\n","print(df_reduced.shape)"],"metadata":{"id":"CC-TfI_I-fA4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1761911422440,"user_tz":-480,"elapsed":15,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"7b723a2f-3c27-447d-9878-0cbbb52ed252"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(32561, 13)\n"]}]},{"cell_type":"code","source":["df_reduced[target] = df_reduced[target].apply(lambda x: 1 if x == '>50K' else 0)"],"metadata":{"id":"BvmJ6uYb8Wwf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_reduced.head(1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":81},"id":"aUXllETT9AY3","executionInfo":{"status":"ok","timestamp":1761911427754,"user_tz":-480,"elapsed":99,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"266953be-c93b-41f5-e873-346c2faef48b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       age workclass     education marital_status    occupation  \\\n","14160   27   Private  Some-college       Divorced  Adm-clerical   \n","\n","        relationship   race     sex  capital_gain  capital_loss  \\\n","14160  Not-in-family  White  Female             0             0   \n","\n","       hours_per_week native_country  income  \n","14160              38  United-States       0  "],"text/html":["\n","  <div id=\"df-1856224a-6dd3-4ee0-b100-11cff9fc9f4f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>education</th>\n","      <th>marital_status</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>sex</th>\n","      <th>capital_gain</th>\n","      <th>capital_loss</th>\n","      <th>hours_per_week</th>\n","      <th>native_country</th>\n","      <th>income</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>14160</th>\n","      <td>27</td>\n","      <td>Private</td>\n","      <td>Some-college</td>\n","      <td>Divorced</td>\n","      <td>Adm-clerical</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>United-States</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1856224a-6dd3-4ee0-b100-11cff9fc9f4f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1856224a-6dd3-4ee0-b100-11cff9fc9f4f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1856224a-6dd3-4ee0-b100-11cff9fc9f4f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_reduced","summary":"{\n  \"name\": \"df_reduced\",\n  \"rows\": 32561,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 17,\n        \"max\": 90,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          51,\n          84,\n          23\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"workclass\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Without-pay\",\n          \"State-gov\",\n          \"Local-gov\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Some-college\",\n          \"HS-grad\",\n          \"7th-8th\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marital_status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Divorced\",\n          \"Married-civ-spouse\",\n          \"Married-spouse-absent\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"occupation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"Priv-house-serv\",\n          \"?\",\n          \"Adm-clerical\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"relationship\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Not-in-family\",\n          \"Wife\",\n          \"Other-relative\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"race\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Black\",\n          \"Amer-Indian-Eskimo\",\n          \"Other\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Male\",\n          \"Female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital_gain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7385,\n        \"min\": 0,\n        \"max\": 99999,\n        \"num_unique_values\": 119,\n        \"samples\": [\n          3137,\n          2346\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital_loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 402,\n        \"min\": 0,\n        \"max\": 4356,\n        \"num_unique_values\": 92,\n        \"samples\": [\n          419,\n          2080\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hours_per_week\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 1,\n        \"max\": 99,\n        \"num_unique_values\": 94,\n        \"samples\": [\n          37,\n          12\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"native_country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 42,\n        \"samples\": [\n          \"Hungary\",\n          \"Cuba\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["anom_count = (df_reduced[target] == 1).sum()\n","normal_count = (df_reduced[target] == 0).sum()\n","\n","print(\"Number of anomalies:\", anom_count)\n","print(\"Number of normals:\", normal_count)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K49SKuZM9TLE","executionInfo":{"status":"ok","timestamp":1761911432345,"user_tz":-480,"elapsed":13,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"c7a9fdc8-ede9-4aa1-e84d-03a97b2001ae"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of anomalies: 7841\n","Number of normals: 24720\n"]}]},{"cell_type":"code","source":["#Proportion of attacks in network traffic\n","plt.figure(figsize = (10, 6))\n","target_count = df_reduced[target].value_counts()\n","plt.figure(figsize = (12, 8))\n","plt.pie(target_count, labels = ['No', 'Yes'], autopct=\"%0.1f%%\")\n","plt.title('Is Anomaly')\n","plt.show()\n","#Conclusion: Imbalanced dataset"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":692},"id":"mAR8IJqP9xad","executionInfo":{"status":"ok","timestamp":1761911437187,"user_tz":-480,"elapsed":124,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"571fd99e-4ab6-4e84-b7e4-8ee60ccbec8e"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 0 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# See how many missing values per column\n","df_reduced.isna().sum()\n","\n","# Or total missing values in the entire dataframe\n","total_nans = df_reduced.isna().sum().sum()\n","print(f\"Total NaN values: {total_nans:,}\")\n","\n","# To quickly view which columns have missing data\n","nan_cols = df_reduced.columns[df.isna().any()].tolist()\n","print(\"Columns with NaNs:\", nan_cols)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VzILo0ql94iV","executionInfo":{"status":"ok","timestamp":1761911440114,"user_tz":-480,"elapsed":38,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"ea74171e-0f2a-48fc-d225-58f996a085a6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Total NaN values: 0\n","Columns with NaNs: []\n"]}]},{"cell_type":"code","source":["# Check if there are any infinite values\n","inf_mask = df.isin([np.inf, -np.inf])\n","has_inf = inf_mask.any().any()\n","print(f\"Contains infinite values: {has_inf}\")\n","\n","# Count how many per column\n","inf_counts = inf_mask.sum()\n","inf_counts[inf_counts > 0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":102},"id":"mL2OpojD-Ok2","executionInfo":{"status":"ok","timestamp":1761911442563,"user_tz":-480,"elapsed":65,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"350af744-bf54-49a4-ba43-a01e6029b3d0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Contains infinite values: False\n"]},{"output_type":"execute_result","data":{"text/plain":["Series([], dtype: int64)"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["# Separate features and label\n","X = df_reduced.drop(columns=[target])\n","y = df_reduced[target]"],"metadata":{"id":"nXujoR8O-QJk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train, X_temp, y_train, y_temp = train_test_split(\n","    X, y, test_size=0.3, stratify=y, random_state=42\n",")\n","\n","# Split temp into validation (15%) and test (15%)\n","X_val, X_test, y_val, y_test = train_test_split(\n","    X_temp, y_temp, test_size=0.5, stratify=y_temp, random_state=42\n",")"],"metadata":{"id":"0CTOM8Y2-dt_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["num_cols = X_train.select_dtypes(include=[np.number]).columns\n","\n","scaler = StandardScaler()\n","\n","X_train[num_cols] = scaler.fit_transform(X_train[num_cols])\n","X_val[num_cols] = scaler.transform(X_val[num_cols])\n","X_test[num_cols] = scaler.transform(X_test[num_cols])"],"metadata":{"id":"fuXI-luj-h90"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_df = pd.concat([X_train, y_train], axis=1)\n","valid_df = pd.concat([X_val, y_val], axis=1)\n","test_df = pd.concat([X_test, y_test], axis=1)"],"metadata":{"id":"tgCe630L-j2Y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(f\"Train shape: {train_df.shape}, anomaly ratio={train_df[target].mean():.4%}\")\n","print(f\"Valid shape: {valid_df.shape}, anomaly ratio={valid_df[target].mean():.4%}\")\n","print(f\"Test shape:  {test_df.shape},  anomaly ratio={test_df[target].mean():.4%}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XOSf-jYv-lYE","executionInfo":{"status":"ok","timestamp":1761911453799,"user_tz":-480,"elapsed":8,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"7ede69b8-c494-450c-d59a-89a2d435ac3d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Train shape: (22792, 13), anomaly ratio=24.0830%\n","Valid shape: (4884, 13), anomaly ratio=24.0786%\n","Test shape:  (4885, 13),  anomaly ratio=24.0737%\n"]}]},{"cell_type":"code","source":["import os\n","\n","# Create the folder path (it won't exist by default)\n","save_dir = \"/content/drive/MyDrive/datasets/adult_income\"\n","\n","# Make sure the directory exists\n","os.makedirs(save_dir, exist_ok=True)\n","\n","# Now safely save your splits\n","train_df.to_csv(f\"{save_dir}/train.csv\", index=False)\n","valid_df.to_csv(f\"{save_dir}/val.csv\", index=False)\n","test_df.to_csv(f\"{save_dir}/test.csv\", index=False)\n","\n","print(\"Files saved in:\", save_dir)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Wk-lEVBa-m8a","executionInfo":{"status":"ok","timestamp":1761911459550,"user_tz":-480,"elapsed":274,"user":{"displayName":"Munkhzaya Bayanbat","userId":"02841352344795048115"}},"outputId":"f639b1e3-b92d-4d30-9594-7350f6d123be"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Files saved in: /content/drive/MyDrive/datasets/adult_income\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"48DsXCuc-rQB"},"execution_count":null,"outputs":[]}]}